@{
    Layout = null;
}
@using ThothSystemVersion1.ViewModels
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@{

    int jobRole = HttpContextAccessor.HttpContext.Session.GetInt32("JobRole") ?? 0;
    Console.WriteLine("JobRole: " + jobRole);
}

@model List<JobOrderCustEmpVM>


<head>
    <title>Thoth</title>

    <link rel="icon" type="image/x-icon" href="~/image/eye.jpg" />
    <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
    <link href="~/css/Technical/viewAllJobOrder.css" rel="stylesheet" />
</head>
<div class="container">
    <div class="arrow">
        @{
            // admin
            if (jobRole == 0)
            {
                <a asp-controller="employee" asp-action="adminhome" class="back">
                    <i class='bx bx-left-arrow-circle' style="font-size: 40px; color: white;"></i>
                </a>

            } // Technical manager
            else if (jobRole == 3)
            {
                <a asp-controller="employee" asp-action="TechnicalManager" class="back">
                    <i class='bx bx-left-arrow-circle' style="font-size: 40px; color: white;"></i>
                </a>
            } // Technical Clerk
            else if (jobRole == 4)
            {
                <a asp-controller="employee" asp-action="TechnicalClerk" class="back">
                    <i class='bx bx-left-arrow-circle' style="font-size: 40px; color: white;"></i>
                </a>
            }


        }
    </div>
    <h1>الطلبيات</h1>
    <div class="btn">
        <a asp-action="CreateNewJobOrder" asp-controller="Technical" class="editBtn">اضافة</a>
    </div>
    <div class="search-container">
        <i class='bx bx-search search-icon'></i>
        <input type="text" id="searchInput" onkeyup="searchJobOrder()" placeholder="ابحث عن طلب...">
    </div>
    <div class="tableContainer">
        <table id="jobOrderTable">
            <tr>
                <th colspan="2">الإجراءات</th>
                <th>العميل</th>
                <th>حالة الطلب</th>
                <th>تاريخ الانتهاء</th>
                <th>تاريخ البدء</th>
            </tr>
            @{
                foreach (JobOrderCustEmpVM job in Model)
                {
                    <tr>
                        <td>
                            <a asp-controller="Technical" asp-action="EditJobOrder" asp-route-jobOrderid="@job.JobOrderId" class="editBtn">تعديل</a>
                        </td>

                        <td>
                            @* <button class="editBtn" id="edijob" asp-action="showJobOrderSpecifications" asp-route-jobOrderId="@job.JobOrderId">اظهار التفاصيل</button> *@
                            <a class="editBtn" href="@Url.Action("showJobOrderSpecifications","Technical", new { jobOrderId = job.JobOrderId })">اظهار التفاصيل</a>

                        </td>
                        <td>@job.CustomerName</td>
                        <td>@job.OrderProgress</td>
                        <td>@job.EndDate</td>
                        <td>@job.StartDate</td>
                    </tr>
                }
            }
        </table>
    </div>
</div>
<script src="~/js/Technical/viewAllJobOrder.js">
</script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/8.0.7/signalr.min.js"
        integrity="sha512-7SRCYIJtR6F8ocwW7UxW6wGKqbSyqREDbfCORCbGLatU0iugBLwyOXpzhkPyHIFdBO0K2VCu57fvP2Twgx1o2A=="
        crossorigin="anonymous" referrerpolicy="no-referrer">
</script>
<script>
    // Create the connection to the SignalR hub
      var hub = new signalR.HubConnectionBuilder()
          .withUrl("/InventoryReorderPoint")
          .build();

     hub.start()
          .then(function () {
              console.log("SignalR connection established.");

              // Invoke the server-side method to check paper reorder points.
              hub.invoke("allLatejobOrders")
                 .catch(function (err) {
                     console.error("Error invoking CheckPaperReorderPoint: ", err.toString());
                  });
          })
         .catch(function (err) {
              console.error("SignalR connection error: ", err.toString());
          });

      // Listen for reorder messages from the hub.
      hub.on("getallLatejobOrders", function (message) {
          console.log("Received reorder message: ", message);
          var messageDiv = document.getElementById("reorderMessages");
          // Make sure the message div is visible
         messageDiv.style.display = "block";
          // Append the new message rather than replacing previous ones
          messageDiv.innerHTML += "<div>" + message + "</div>";
      });
</script>