@model ThothSystemVersion1.ViewModels.JobOrderSpecificationsViewModel
@using Microsoft.AspNetCore.Http
@using ThothSystemVersion1.Utilities
@inject IHttpContextAccessor HttpContextAccessor
@{

    int jobRole = HttpContextAccessor.HttpContext.Session.GetInt32("JobRole") ?? 0;
    Console.WriteLine("JobRole: " + jobRole);
}

@{
    Layout = "~/Views/Shared/MinimalLayout.cshtml";

    ViewData["Title"] = "Thoth";
}
@section HeadContent {
    <link rel="icon" type="image/x-icon" href="~/image/eye.jpg" />
    <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
    <link href="~/css/Technical/showJobOrder.css" rel="stylesheet" />
}
<div class="container">
    <div class="arrow">
        @{
            // admin
            if (jobRole == 0)
            {
                <a asp-controller="employee" asp-action="adminhome" class="back">
                    <i class='bx bx-left-arrow-circle' style="font-size: 40px; color: white;"></i>
                </a>

            } // Technical manager
            else if (jobRole == 3)
            {
                <a asp-controller="employee" asp-action="TechnicalManager" class="back">
                    <i class='bx bx-left-arrow-circle' style="font-size: 40px; color: white;"></i>
                </a>
            } // Technical Clerk
            else if (jobRole == 4)
            {
                <a asp-controller="employee" asp-action="TechnicalClerk" class="back">
                    <i class='bx bx-left-arrow-circle' style="font-size: 40px; color: white;"></i>
                </a>
            }
            else if (jobRole == 7)
            {
                <a asp-controller="employee" asp-action="AccountingManager" class="back">
                    <i class='bx bx-left-arrow-circle' style="font-size: 40px; color: white;"></i>
                </a>
            }
            else if (jobRole == 8)
            {
                <a asp-controller="employee" asp-action="AccountingClerk" class="back">
                    <i class='bx bx-left-arrow-circle' style="font-size: 40px; color: white;"></i>
                </a>
            }
        }
    </div>
    <h1>تفاصيل التشغيلة</h1>

    <!-- Job Order Details -->
    <div class="mainBox">
        <h2>بيانات التشغيلة</h2>
        <dl class="colCont1">
            <div class="row-style">
                <dd>@Model.JobOrderId</dd>
                <dt>@Html.DisplayNameFor(m => m.JobOrderId)</dt>

            </div>
            <div class="row-style">
                <dd>@Model.CustomerName</dd>
                <dt>@Html.DisplayNameFor(m => m.CustomerName)</dt>

            </div>

            <div class="row-style">
                <dd>@Model.UnearnedRevenue</dd>
                <dt>@Html.DisplayNameFor(m => m.UnearnedRevenue)</dt>

            </div>

            <div class="row-style">
                <dd>@Model.JobOrdernotes</dd>
                <dt>@Html.DisplayNameFor(m => m.JobOrdernotes)</dt>

            </div>

            <div class="row-style">
                <dd>@Model.RemainingAmount</dd>
                <dt>@Html.DisplayNameFor(m => m.RemainingAmount)</dt>

            </div>

            <div class="row-style">
                <dd>@Model.OrderProgress</dd>
                <dt>@Html.DisplayNameFor(m => m.OrderProgress)</dt>
            </div>

            <div class="row-style">
                <dd>@Model.JobOrderSource</dd>
                <dt>@Html.DisplayNameFor(m => m.JobOrderSource)</dt>
            </div>
            <!-- You can add additional fields as needed -->
        </dl>
    </div>

    <!-- Employees Table -->
    <div class="mainBox">
        <h2>الموظفون</h2>
        <table>
            <thead>
                <tr>
                    <th>الدور الوظيفي</th>
                    <th>اسم الموظف</th>

                </tr>
            </thead>
            <tbody>
                @if (Model.Employees != null && Model.Employees.Any())
                {
                    foreach (var employee in Model.Employees)
                    {
                        <tr>

                            <td>@employee.JobRole.GetDisplayName()</td>
                            <td>@employee.EmployeeName</td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="2">لا توجد بيانات</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    @if (Model.QuantityBridges?.Any(q => q.RequisiteId != null) == true)
    {
        <h2>الكميات المسحوبة</h2>

        <table>
            <thead>
                <tr>
                    <th>الكمية</th>
                    <th>السعر</th>
                    <th>الصنف</th>

                </tr>
            </thead>
            <tbody>
                @foreach (var bridge in Model.QuantityBridges.Where(q => q.RequisiteId != null))
                {

                    string name = null;
                    int? quantity = null;
                    decimal? price = null;

                    foreach (var paper in Model.Papers)
                    {
                        if (bridge.PaperId == paper.PaperId)
                        {
                            name = paper.Name;
                            quantity = bridge.Quantity;
                            price = bridge.Price;
                            break;
                        }
                    }

                    if (name == null)
                    {
                        foreach (var ink in Model.Inks)
                        {
                            if (bridge.InkId == ink.InkId)
                            {
                                name = ink.Name;
                                quantity = bridge.Quantity;
                                price = bridge.Price;
                                break;
                            }
                        }
                    }

                    if (name == null)
                    {
                        foreach (var s in Model.Supplies)
                        {
                            if (bridge.SuppliesId == s.SuppliesId)
                            {
                                name = s.Name;
                                quantity = bridge.Quantity;
                                price = bridge.Price;
                                break;
                            }
                        }
                    }

                    if (name != null)
                    {
                        <tr>
                            <td>@quantity</td>
                            <td>@price</td>
                            <td>@name</td>

                        </tr>
                    }
                }
            </tbody>
        </table>
    }


    @if (Model.QuantityBridges?.Any(q => q.ReturnId != null) == true)
    {
        <h2>الكميات المرتجعة</h2>
        <table>
            <thead>
                <tr>
                    <th>الكمية</th>
                    <th>السعر</th>
                    <th>الصنف</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var bridge in Model.QuantityBridges.Where(q => q.ReturnId != null))
                {
                    string name = null;

                    if (bridge.PaperId != null)
                        name = Model.Papers.FirstOrDefault(p => p.PaperId == bridge.PaperId)?.Name;
                    else if (bridge.InkId != null)
                        name = Model.Inks.FirstOrDefault(i => i.InkId == bridge.InkId)?.Name;
                    else if (bridge.SuppliesId != null)
                        name = Model.Supplies.FirstOrDefault(s => s.SuppliesId == bridge.SuppliesId)?.Name;

                    if (!string.IsNullOrEmpty(name))
                    {
                        <tr>
                            <td>@bridge.Quantity</td>
                            <td>@bridge.Price</td>
                            <td>@name</td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    }


    @if (Model.ProcessBridges?.Any() == true)
    {
        <h2>العمليات المرتبطة</h2>
        <table>
            <thead>
                <tr>
                    <th>تكلفة الآلة</th>
                    <th>تكلفة العمالة</th>
                    <th>ساعات العمل</th>
                    <th>اسم الآلة</th>
                    <th>اسم العملية</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var pb in Model.ProcessBridges)
                {
                    <tr>
                        <td>@pb.TotalMachineValue</td>
                        <td>@pb.TotalLabourValue</td>
                        <td>@pb.NumberOfHours</td>
                        <td>
                            @if (Model.Machines != null && Model.Machines.Any())
                            {
                                foreach (var machine in Model.Machines)
                                {
                                    <div>@machine.MachineProcessName</div>
                                }
                            }
                            else
                            {
                                <div>لا توجد بيانات</div>
                            }
                        </td>

                        <td>
                            @if (Model.Labours != null && Model.Labours.Any())
                            {
                                foreach (var labour in Model.Labours)
                                {
                                    <div>@labour.LabourProcessName</div>
                                }
                            }
                            else
                            {
                                <div>لا توجد بيانات</div>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }

</div>