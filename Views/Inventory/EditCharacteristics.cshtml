@model ColorWeightSize
@{
    ViewData["Title"] = "تعديل المواصفات";
    Layout = null;
}

<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.rtl.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #f8f9fa;
            padding: 20px;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .form-container {
            background: white;
            padding: 25px;
            border-radius: 8px;
            box-shadow: 0 0 15px rgba(0,0,0,0.1);
            max-width: 600px;
            margin: 30px auto;
        }

        .form-title {
            text-align: center;
            margin-bottom: 25px;
            color: #0d6efd;
            font-weight: bold;
        }

        .form-label {
            font-weight: 600;
            margin-bottom: 8px;
        }
    </style>
</head>
<body>
    <div class="form-container">
        <h2 class="form-title">تعديل المواصفات</h2>

        @if (TempData["Success"] != null)
        {
            <div class="alert alert-success text-center">@TempData["Success"]</div>
        }
        @if (TempData["Error"] != null)
        {
            <div class="alert alert-danger text-center">@TempData["Error"]</div>
        }

        <form asp-action="EditCharacteristics" method="post">
            <input type="hidden" asp-for="ColorWeightSizeId" />

            <div class="mb-3">
                <label asp-for="Type" class="form-label">نوع المواصفة</label>
                <select asp-for="Type" class="form-select" id="typeSelect" onchange="showRelevantField()">
                    <option value="">اختر النوع</option>
                    @foreach (var item in ViewBag.TypeOptions)
                    {
                        <option value="@item.Value">@item.Text</option>
                    }
                </select>
                <span asp-validation-for="Type" class="text-danger"></span>
            </div>

            <!-- حجم -->
            <div class="mb-3" id="sizeFieldGroup" style="display: none;">
                <label asp-for="Size" class="form-label">الحجم</label>
                <input asp-for="Size" class="form-control" />
                <span asp-validation-for="Size" class="text-danger"></span>
            </div>

            <!-- وزن -->
            <div class="mb-3" id="weightFieldGroup" style="display: none;">
                <label asp-for="Weight" class="form-label">الوزن (كجم)</label>
                <input asp-for="Weight" type="number" step="0.01" class="form-control" />
                <span asp-validation-for="Weight" class="text-danger"></span>
            </div>

            <!-- لون -->
            @* <div class="mb-3" id="colorFieldGroup" style="display: none;"> *@
            @*     <label asp-for="Colored" class="form-label">اللون</label> *@
            @*     <input asp-for="Colored" class="form-control" /> *@
            @*     <span asp-validation-for="Colored" class="text-danger"></span> *@
            @* </div> *@
            <!-- لون -->
            <div class="mb-3" id="colorFieldGroup" style="display: none;">
                <label class="form-label">اللون</label>
                <input type="text" class="form-control" id="coloredInput"
                       value="@(Model.Colored?.StartsWith("0x") == true ? "" : Model.Colored)" />
                <input type="hidden" asp-for="Colored" id="actualColored" />
                <span asp-validation-for="Colored" class="text-danger"></span>
            </div>

            <div class="d-grid gap-2 mt-4">
                <button type="submit" class="btn btn-primary">حفظ التغييرات</button>
                <a href="@Url.Action("Index")" class="btn btn-outline-secondary">العودة للقائمة</a>
            </div>
        </form>
    </div>

    <script>
        // عرض الحقل المناسب عند تغيير النوع
        function showRelevantField() {
            // إخفاء جميع الحقول أولاً
            document.getElementById('sizeFieldGroup').style.display = 'none';
            document.getElementById('weightFieldGroup').style.display = 'none';
            document.getElementById('colorFieldGroup').style.display = 'none';

            // عرض الحقل المناسب حسب الاختيار
            const typeSelect = document.getElementById('typeSelect');
            switch(typeSelect.value) {
                case '1': // حجم
                    document.getElementById('sizeFieldGroup').style.display = 'block';
                    break;
                case '2': // وزن
                    document.getElementById('weightFieldGroup').style.display = 'block';
                    break;
                case '3': // لون
                    document.getElementById('colorFieldGroup').style.display = 'block';
                    break;
            }
        }

        // تهيئة النموذج عند التحميل
        document.addEventListener('DOMContentLoaded', function() {
            // تعيين قيمة النوع إذا كانت موجودة
            const typeSelect = document.getElementById('typeSelect');
            if (@Model.Type > 0) {
                typeSelect.value = '@Model.Type';
                showRelevantField();

                // تعيين القيمة الحالية للحقل المناسب
                switch(@Model.Type) {
                    case 1:
                        document.getElementById('Size').value = '@Model.Size';
                        break;
                    case 2:
                        document.getElementById('Weight').value = '@Model.Weight';
                        break;
                    case 3:
                        document.getElementById('Colored').value = '@Model.Colored';
                        break;
                }
            }
        });
                document.addEventListener('DOMContentLoaded', function() {
            // معالجة اللون عند التحميل
            const coloredValue = '@Html.Raw(Model.Colored)';
            if (coloredValue.startsWith("0x")) {
                // تحويل الهكس إلى سترينج
                const hex = coloredValue.substring(2);
                let str = '';
                for (let i = 0; i < hex.length; i += 2) {
                    str += String.fromCharCode(parseInt(hex.substr(i, 2), 16));
                }
                document.getElementById('coloredInput').value = str;
            } else {
                document.getElementById('coloredInput').value = coloredValue;
            }

            // تحديث القيمة المخفية عند التعديل
            document.getElementById('coloredInput').addEventListener('input', function() {
                document.getElementById('actualColored').value = this.value;
            });
        });
    </script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>