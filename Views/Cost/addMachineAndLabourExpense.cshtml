 @model ThothSystemVersion1.DataTransfereObject.MachineLabourDTO
 @using ThothSystemVersion1.ModifiedModels;
 @using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@{
    Layout = "~/Views/Shared/MinimalLayout.cshtml";

    ViewData["Title"] = "MISCLLANOEUS EXPENSE";
    int jobRole = HttpContextAccessor.HttpContext.Session.GetInt32("JobRole") ?? 0;
    var remainingAmount = Model.RemainingAmount;
}

@section HeadContent {
    <link rel="icon" type="image/x-icon" href="~/image/eye.jpg" />
    <link href="~/css/Cost/addMachineAndLabourExpense.css" rel="stylesheet" />
    <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
}

<link rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
      integrity="sha512-pVnH1+Wom7X6Wy0r6V8DyZl6IYtQ1l4Fy/igO7kkIcE2gW6oPYoiO6lA6G7Tf58zD5YVbIF4ZJpIvG8P+KViwg=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer" />

<div class="arrow mb-4">
    @if (jobRole == 0)
    {
        <a asp-controller="Employee" asp-action="AdminHome" class="back">
            <i class="bx bx-left-arrow-circle" style="font-size:40px;color:white;"></i>
        </a>
    }
    else if (jobRole == 6)
    {
        <a asp-controller="Employee" asp-action="AccountingManager" class="back">
            <i class="bx bx-left-arrow-circle" style="font-size:40px;color:white;"></i>
        </a>
    }
    else if (jobRole == 7)
    {
        <a asp-controller="Employee" asp-action="AccountingClerk" class="back">
            <i class="bx bx-left-arrow-circle" style="font-size:40px;color:white;"></i>
        </a>
    }
</div>
@* Success and Error Messages *@
@if (TempData["Success"] != null)
{
    <div class="notification success">
        <div class="notification-content"><i class='bx bx-check-circle'></i> @TempData["Success"]</div>
        <input type="hidden" id="tempDataSuccess" value="true" />
        <div class="progress-bar success"></div>
    </div>
}
@if (TempData["Error"] != null)
{
    <div class="notification error">
        <div class="notification-content"><i class='bx bx-error-circle'></i> @TempData["Error"]</div>
        <input type="hidden" id="tempDataSuccess" value="false" />
        <div class="progress-bar error"></div>
    </div>
}
<input type="hidden" id="hdnJobRole" value="@jobRole" />


<h2>تفاصيل الطلبية</h2>

<!-- Order ID -->
<div class="mainBox">
    <dl class="colCont1">
        <div class="row-style">
            <dd> @Model.JobOrderId </dd>
            <dt> رقم الطلبيه</dt>
        </div>

        <!-- Employee -->

        <div class="row-style">

            <dd>@Model.EmployeeName</dd>
            <dt>الموظف</dt>

        </div>


        <!-- Status -->
        <div class="row-style">
            <dd>@Model.OrderProgress</dd>
            <dt>الحاله</dt>
        </div>

        <!-- Start Date -->

        <div class="row-style">
            <dd> @Model.StartDate</dd>
            <dt>تاريخ البدايه</dt>

        </div>

        <!-- End Date -->

        <div class="row-style">
            <dd>@Model.EndDate</dd>
            <dt>تاريخ الانتهاء</dt>

        </div>

        <!-- Remaining Amount -->

        <div class="row-style">
            <dd>@Model.RemainingAmount</dd>
            <dt>المتبقي</dt>

        </div>

        <!-- Unearned Revenue -->

        <div class="row-style">
            <dd>@Model.UnearnedRevenue</dd>
            <dt>ايراد غير مستحق</dt>

        </div>

        <!-- Earned Revenue -->

        <div class="row-style">
            <dd>@Model.EarnedRevenue</dd>
            <dt>ايراد مستحق</dt>

        </div>

        <!-- Customer -->

        <div class="row-style">
            <dd>@Model.CustomerName</dd>
            <dt>عملاء</dt>

        </div>

         <div class="row-style"> 
             <dd>@Model.JobOrderSource</dd> 
             <dt>المصدر</dt> 
         </div> 

        <!-- Notes (full width) -->

        <div class="row-style">
            <dd>@Model.JobOrdernotes</dd>
            <dt>ملاحظات</dt>

        </div>

    </dl>
</div>
<!-- Used Balances -->
<div class="mainBox">

    <h2>المستهلك من الورق، الحبر، المستلزمات</h2>
    <dl class="colCont1">
        <div class="row-style">
            <dd>@Model.paperBalance</dd>
            <dt>ورق</dt>
        </div>
        <div class="row-style">
            <dd>@Model.inkBalance</dd>
            <dt> حبر</dt>
        </div>
        <div class="row-style">

            <dd>@Model.supplyBalance</dd>
            <dt> مستلزمات</dt>
        </div>
    </dl>
</div>
<!-- used items data-->

@* Assuming this is inside a View أو PartialView *@
<div class="tableContainer">
    <table>
        <thead>
            <tr>
                <th scope="col">القيمة</th>
                <th scope="col">السعر</th>
                <th scope="col">الكمية</th>
                <th scope="col">العنصر</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.modifiedQuantityBridgeList != null && Model.modifiedQuantityBridgeList.Any())
            {
                foreach (var item in Model.modifiedQuantityBridgeList)
                {
                    <tr>
                        @* اختر اسم العنصر المناسب، مع استخدام null-coalescing operator لتبسيط الكود *@
                        <td>@item.TotalBalance</td>
                             <td>@item.Price</td>
                     
                        <td>@item.Quantity</td>
                   
                        <td>
                            @{
                                var name = item.PaperName
                                ?? item.InkName
                                ?? item.SuppliesName
                                ?? "(بدون اسم)";
                            }
                            @name
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="4" class="text-center text-muted">
                        لا توجد بيانات للعرض
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>




<h2>اضافة عناصر التكلفة</h2>

@using (Html.BeginForm("addMachineAndLabourExpense", "cost", FormMethod.Post))
{
    <input type="text" name="JobOrderId" hidden value="@Model.JobOrderId">

    <div class="container1">
        <div class="rowCont">


            <div class="colCont">
                <label class="form-label">عدد الساعات</label>
                <input type="text" id="NumberOfHours" class="form-control" min="0" step="0.5">
            </div>

            <div class="colCont">
                <label class="form-label">العنصر</label>
                <select id="itemId" class="form-select" disabled>
                    <option value="">-- اختر العنصر --</option>
                </select>
            </div>


            <div class="colCont">
                <label class="form-label">عناصر المقايسة</label>
                <select id="itemType" class="form-select">
                    <option value="">-- اختر العنصر --</option>
                    <option value="Machine">ماكينة</option>
                    <option value="Labour">عمال</option>
                </select>
            </div>


        </div>
        <div class="btnDown">
            <button type="button" id="addItem" class="btn">اضافة العنصر</button>
        </div>

    </div>

    <div class="tableContainer1">
        <table>
            <thead>
                <tr>
                    <th>الاجرائات</th>
                    <th>عدد الساعات</th>
                    <th>عنصر المقايسة</th>
                </tr>
            </thead>
            <tbody id="itemsTableBody">
                <!-- Dynamic content -->
            </tbody>
        </table>
    </div>

    <div id="hiddenItemsContainer"></div>
    <div class="container1">
        <div class="rowCont">
            <div class="colCont">
                <label class="form-label">جملة الخامات</label>
                <input asp-for="MaterialsTotal" class="form-control" type="number" step="0.01" />
            </div>
            <div class="colCont">
                <label class="form-label">مصاريف تشغيل الافلام</label>
                <input asp-for="FilmsProcessingExpense" class="form-control" type="number" step="0.01" />
            </div>
            <div class="colCont">
                <label class="form-label">مصاريف تشغيل الخامات</label>
                <input asp-for="MaterialProcessingExpense" class="form-control" type="number" step="0.01" />
            </div>
        </div>
        <div class="rowCont">
            <div class="colCont">
                <label class="form-label">اجمالي المصروفات</label>
                <input asp-for="TotalExpenses" class="form-control" type="number" step="0.01" />
            </div>
            <div class="colCont">
                <label class="form-label">مصروفات ادارية</label>
                <input asp-for="AdminstrativeExpense" class="form-control" type="number" step="0.01" />
            </div>
            <div class="colCont">
                <label class="form-label">الاجمالي</label>
                <input asp-for="TotalAfterMaterials" class="form-control" type="number" step="0.01" />
            </div>

        </div>
        <div class="rowCont">
            <div class="colCont">
                <label class="form-label">وزارة المالية</label>
                <input asp-for="MinistryOfFinance" class="form-control" type="number" step="0.01" />
            </div>
            <div class="colCont">
                <label class="form-label">الجملة</label>
                <input asp-for="TotalAfterPercentage" class="form-control" type="number" step="0.01" />
            </div>
            <div class="colCont">
                <label class="form-label">النسبة</label>
                <input asp-for="Percentage" class="form-control" type="number" step="0.01" />
            </div>





        </div>
        <div class="rowCont">
            <div class="colCont">
                <label class="form-label">اخري</label>
                <input asp-for="Other" class="form-control" type="number" step="0.01" />
            </div>
            <div class="colCont">
                <label class="form-label">الاجمالي بعد تحسين العمال</label>
                <input asp-for="totalAfterEmplyeeImprovementbox" class="form-control" type="number" step="0.01" />
            </div>
            <div class="colCont">
                <label class="form-label">صندوق تحسين العمال</label>
                <input asp-for="EmployeeImprovmentBox" class="form-control" type="number" step="0.01" />
            </div>
        </div>
        <div class="rowCont">
            <div class="colCont">
                <label class="form-label">القيمة الاجمالية</label>
                <input asp-for="FinalTotal" class="form-control" type="number" step="0.01" />
            </div>
            <div class="colCont">
                <label class="form-label">ضريبة القيمة المضافة</label>
                <input asp-for="ValueAddedTax" class="form-control" type="number" step="0.01" />
            </div>
        </div>


        <button type="submit" class="btn">
            حفظ المقايسة
        </button>
    </div>
}

@section Scripts {
    <script>
        $(document).ready(function () {
            const dataSources = {
                Machine: @Html.Raw(Json.Serialize(ViewBag.machineList)),
                Labour: @Html.Raw(Json.Serialize(ViewBag.labourList))
            };

            let items = [];
            let editIndex = -1;

            // Populate items dropdown
            $('#itemType').change(function () {
                const type = $(this).val();
                const $itemSelect = $('#itemId');
                $itemSelect.empty().prop('disabled', !type).append('<option value="">-- اختر العنصر --</option>');

                if (type && dataSources[type]) {
                    dataSources[type].forEach(item => {
                        const id = item.machineId || item.labourId;
                        const name = item.machineProcessName || item.labourProcessName;
                        $itemSelect.append(`<option value="${id}">${name}</option>`);
                    });
                }
            });

            // Add/Update item
            $('#addItem').click(function () {
                const itemType = $('#itemType').val();
                const itemId = $('#itemId').val();
                const itemName = $('#itemId option:selected').text();
                const numberOfHours = parseFloat($('#NumberOfHours').val());

                if (!itemType || !itemId || isNaN(numberOfHours) || numberOfHours <= 0) {
                    alert('Please fill all fields correctly');
                    return;
                }

                // Get price from data source
                const sourceArray = dataSources[itemType];
                const selectedItem = sourceArray.find(x =>
                    (itemType === 'Machine' ? x.machineId : x.labourId) == itemId
                );

                const hourPrice = itemType === 'Machine'
                    ? selectedItem.machineHourPrice
                    : selectedItem.labourHourPrice;

                const newItem = {
                    itemType,
                    itemId: parseInt(itemId),
                    itemName,
                    numberOfHours,
                    hourPrice: parseFloat(hourPrice)
                };

                if (editIndex === -1) {
                    items.push(newItem);
                } else {
                    items[editIndex] = newItem;
                    editIndex = -1;
                    $('#addItem').html('<i class="fas fa-plus me-2"></i>Add Item');
                }

                resetForm();
                renderItems();
            });

            // Edit item
            $(document).on('click', '.editItem', function () {
                const index = $(this).closest('tr').data('index');
                const item = items[index];

                $('#itemType').val(item.itemType).trigger('change');

                setTimeout(() => {
                    $('#itemId').val(item.itemId);
                    $('#NumberOfHours').val(item.numberOfHours);
                }, 100);

                editIndex = index;
                $('#addItem').html('<i class="fas fa-sync me-2"></i>Update Item');
            });

            // Delete item
            $(document).on('click', '.deleteItem', function () {
                const index = $(this).closest('tr').data('index');
                items.splice(index, 1);
                renderItems();
            });

            // Form validation
            $('form').submit(function (e) {
                if (items.length === 0) {
                    e.preventDefault();
                    alert('Please add at least one expense item');
                }
            });

            function resetForm() {
                $('#itemType').val('');
                $('#itemId').val('').prop('disabled', true);
                $('#NumberOfHours').val('');
            }

            function renderItems() {
                const $tbody = $('#itemsTableBody');
                const $hidden = $('#hiddenItemsContainer');

                $tbody.empty();
                $hidden.empty();

                items.forEach((item, index) => {
                    // Create table row
                    $tbody.append(`
                        <tr data-index="${index}">
                        <td>
                                <div class="btn-group">
                                    <button type="button" class="btn btn-warning btn-sm editItem">
                                        <i class="fas fa-edit"></i> تعديل
                                    </button>
                                    <button type="button" class="btn btn-danger btn-sm deleteItem">
                                        <i class="fas fa-trash"></i> حذف
                                    </button>
                                </div>
                            </td>
                           
                            <td>${item.numberOfHours}</td>
                             <td>${item.itemName}</td>
                            
                        </tr>
                    `);

                    // Add hidden inputs for DTO binding
                    const isMachine = item.itemType === 'Machine';
                    $hidden.append(`
                        <input type="hidden" name="ProcessBridges[${index}].${isMachine ? 'MachineId' : 'LabourId'}" value="${item.itemId}" />
                        <input type="hidden" name="ProcessBridges[${index}].NumberOfHours" value="${item.numberOfHours}" />
                        <input type="hidden" name="ProcessBridges[${index}].${isMachine ? 'MachineHourPrice' : 'LabourHourPrice'}" value="${item.hourPrice}" />
                    `);
                });
            }
        });

    </script>
    <script>
        console.log("Script loaded successfully!");
        document.addEventListener('DOMContentLoaded', function () {
        const tempDataElement = document.getElementById('tempDataSuccess');
        const jobRoleElement = document.getElementById('hdnJobRole');

        // Get values with proper fallbacks
        const hasSuccessMessage = tempDataElement ? tempDataElement.value === 'true' : false;
        const jobRole = jobRoleElement ? parseInt(jobRoleElement.value) : 0;

        console.log("Success message exists:", hasSuccessMessage);
        console.log("Job role:", jobRole);

        // Mapping of job roles to their respective URLs
        const jobRoleRoutes = {
            0: "/employee/AdminHome",
            1: "/employee/inventoryManager",
            2: "/employee/inventoryClerk",
            3: "/employee/TechnicalManager",
            4: "/employee/technicalClerk",
            5: "/employee/CostManager",
            6: "/employee/costClerk",
            7: "/employee/AccountingManager",
            8: "/employee/AccountingClerk"
        };

        if (hasSuccessMessage) {
            setTimeout(function () {
                const redirectUrl = jobRoleRoutes[jobRole] || "/Employee/LoginPage";
                window.location.href = redirectUrl;
            }, 3000);
        }
        });
    </script>

}
