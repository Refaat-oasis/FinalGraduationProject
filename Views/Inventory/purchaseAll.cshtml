@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor

@model ThothSystemVersion1.DataTransfereObject.purchaseOrderDTO

@{
    Layout = null;
    ViewBag.Title = "طلب شراء";
    var vendors = ViewBag.vendorList as List<Vendor>;
    var papers = ViewBag.PaperList;
    var inks = ViewBag.InkList;
    var supplies = ViewBag.SupplyList;
    var sparepart = ViewBag.sparePartList;

    int jobRole = HttpContextAccessor.HttpContext.Session.GetInt32("JobRole") ?? 0;
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewBag.Title</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.rtl.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
    <link href="~/css/Inventory/purchaseAll.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />

    <style>

        .tableContainer1 table {
            width: 100%;
            border-collapse: collapse; /* removes double‑borders */
        }

        .tableContainer1 th,
        .tableContainer1 td {
            text-align: center; /* centers content horizontally */
            vertical-align: middle; /* centers content vertically */
            padding: 0.5rem 0.75rem; /* adjust for breathing room */
            border: 1px solid #ddd; /* optional: light border for clarity */
        }

        .tableContainer1 thead th {
            background-color: #f8f9fa; /* optional: light grey header background */
            font-weight: 600;
        }

    </style>

</head>
<body>
    <div class="arrow">
        @if (jobRole == 0)
        {
            <a asp-controller="employee" asp-action="adminhome" class="back">
                <i class='bx bx-left-arrow-circle' style="font-size:40px;color:white"></i>
            </a>
        }
        else if (jobRole == 1)
        {
            <a asp-controller="employee" asp-action="InventoryManager" class="back">
                <i class='bx bx-left-arrow-circle' style="font-size:40px;color:white"></i>
            </a>
        }
        else if (jobRole == 2)
        {
            <a asp-controller="employee" asp-action="InventoryClerk" class="back">
                <i class='bx bx-left-arrow-circle' style="font-size:40px;color:white"></i>
            </a>
        }
    </div>

    <div class="form-container">
        <h1>إضافة طلب شراء</h1>

        @* Success/Error Notifications *@
        @if (TempData["Success"] != null)
        {
            <div class="notification success">
                <div class="notification-content"><i class='bx bx-check-circle'></i> @TempData["Success"]</div>
                <input type="hidden" id="tempDataSuccess" value="true" />
                <div class="progress-bar success"></div>
            </div>
        }
        @if (TempData["Error"] != null)
        {
            <div class="notification error">
                <div class="notification-content"><i class='bx bx-error-circle'></i> @TempData["Error"]</div>
                <input type="hidden" id="tempDataSuccess" value="false" />
                <div class="progress-bar error"></div>
            </div>
        }
        <input type="hidden" id="hdnJobRole" value="@jobRole" />

        <form asp-controller="Inventory" asp-action="purchaseall" method="post">
            <div class="rowCont">
                <div class="colCont">
                    <label asp-for="PurchaseNotes" class="form-label">ملاحظات عن الشراء</label>
                    <textarea asp-for="PurchaseNotes" class="form-control" rows="2" placeholder="أدخل أي ملاحظات هنا..."></textarea>
                </div>
                <div class="colCont">
                    <label asp-for="VendorId" class="form-label">التاجر</label>
                    <select asp-for="VendorId" class="form-select" asp-items="@(new SelectList(vendors, "VendorId", "VendorName"))">
                        <option value="">-- اختر التاجر --</option>
                    </select>
                </div>
            </div>

            <div class="title"><h5>إضافة عنصر</h5></div>
            <div class="rowCont">
                <div class="colCont" id="priceFieldDiv">
                    <label class="form-label">السعر</label>
                    <input type="number" id="itemPrice" class="form-control" min="0" step="0.01" />
                </div>
                <div class="colCont" id="quantityFieldDiv">
                    <label class="form-label">الكمية</label>
                    <input type="number" id="itemQuantity" class="form-control" min="0" />
                </div>
                <div class="colCont" id="unitsFieldDiv" style="display:none;">
                    <label class="form-label">عدد الوحدات</label>
                    <input type="number" id="NumberOfUnits" class="form-control" min="0" />
                </div>
                <div class="colCont">
                    <label class="form-label">العنصر</label>
                    <select id="itemId" class="form-select" disabled>
                        <option value="">-- اختر العنصر --</option>
                    </select>
                </div>
                <div class="colCont">
                    <label class="form-label">نوع العنصر</label>
                    <select id="itemType" class="form-select">
                        <option value="">-- اختر نوع العنصر --</option>
                        <option value="Paper">ورق</option>
                        <option value="Ink">حبر</option>
                        <option value="Supply">مستلزمات</option>
                        <option value="sparePart">قطع غيار</option>
                    </select>
                </div>
                <div class="colCont">
                    <button type="button" id="addItem" class="btn1">أضف العنصر</button>
                </div>
            </div>

            <div class="tableContainer1">
                <table>
                    <thead>
                        <tr>
                            <th>الإجراءات</th>

                            <th>عدد الوحدات</th>
                            <th>السعر</th>
                            <th>الكمية</th>
                            <th>العنصر</th>
                        </tr>
                    </thead>
                    <tbody id="itemsTableBody"></tbody>
                </table>
            </div>

            <div id="hiddenItemsContainer"></div>
            <div class="colCont1"><button type="submit" class="btn1">إرسال الطلب</button></div>
        </form>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(function() {
            var items = [], editIndex = -1;
            const dataSources = {
                Paper: @Html.Raw(Json.Serialize(ViewBag.PaperList)),
                Ink:   @Html.Raw(Json.Serialize(ViewBag.InkList)),
                Supply:@Html.Raw(Json.Serialize(ViewBag.SupplyList)),
                sparePart:@Html.Raw(Json.Serialize(ViewBag.sparepartList))
            };

            $('#itemType').change(function() {
                var type = $(this).val();
                if (type === 'Ink') {
                    $('#unitsFieldDiv, #priceFieldDiv').show();
                    $('#quantityFieldDiv').hide();
                } else {
                    $('#quantityFieldDiv, #priceFieldDiv').show();
                    $('#unitsFieldDiv').hide();
                    $('#NumberOfUnits').val('');
                }

                var $sel = $('#itemId').empty().prop('disabled', !type).append('<option value="">-- اختر --</option>');
                if (!type) return;
                dataSources[type].forEach(i => {
                    const id = i.paperId||i.inkId||i.suppliesId||i.sparePartsId;
                    $sel.append(`<option value="${id}">${i.name}</option>`);
                });
            });

            function renderItems() {
                $('#itemsTableBody,#hiddenItemsContainer').empty();
                items.forEach(function(it,idx) {
                    $('#itemsTableBody').append(`
                    <tr data-index="${idx}">
                       <td>
                        <button type="button" class="btn editItem">تعديل</button>
                        <button type="button" class="btn deleteItem">حذف</button>
                      </td>

                      <td>${it.numberOfUnits}</td>
                      <td>${it.price.toFixed(2)}</td>
                      <td>${it.quantity}</td>
                      <td>${it.itemName}</td>
                    </tr>`);

                    var hidden = [];
                    if (it.itemType==='Ink')      hidden.push(`<input type="hidden" name="BridgeList[${idx}].InkId" value="${it.itemId}" />`);
                    if (it.itemType==='Paper')    hidden.push(`<input type="hidden" name="BridgeList[${idx}].PaperId" value="${it.itemId}" />`);
                    if (it.itemType==='Supply')   hidden.push(`<input type="hidden" name="BridgeList[${idx}].SuppliesId" value="${it.itemId}" />`);
                    if (it.itemType==='sparePart')hidden.push(`<input type="hidden" name="BridgeList[${idx}].SparePartsId" value="${it.itemId}" />`);
                    hidden.push(
                      `<input type="hidden" name="BridgeList[${idx}].Quantity" value="${it.quantity}" />`,
                      `<input type="hidden" name="BridgeList[${idx}].NumberOfUnits" value="${it.numberOfUnits}" />`,
                      `<input type="hidden" name="BridgeList[${idx}].Price" value="${it.price}" />`
                    );
                    $('#hiddenItemsContainer').append(hidden.join(''));
                });
            }

            $('#addItem').click(function() {
                var type = $('#itemType').val(),
                    id   = $('#itemId').val(),
                    name = $('#itemId option:selected').text(),
                    // force quantity = 0 when adding Ink
                    qty  = (type === 'Ink' ? 0 : parseInt($('#itemQuantity').val(), 10)),
                    units = parseInt($('#NumberOfUnits').val(), 10) || 0,
                    price = parseFloat($('#itemPrice').val());

                if (!type || !id || (type !== 'Ink' && (isNaN(qty) || qty < 0)) || isNaN(price) || price < 0) {
                    return alert('يرجى تعبئة جميع الحقول بشكل صحيح');
                }
                var obj = { itemType: type, itemId: id, itemName: name, quantity: qty, numberOfUnits: units, price: price };
                if (editIndex < 0) {
                    items.push(obj);
                } else {
                    items[editIndex] = obj;
                    editIndex = -1;
                    $('#addItem').text('أضف العنصر');
                }
                $('#itemType,#itemQuantity,#NumberOfUnits,#itemPrice').val('');
                $('#itemId').empty().append('<option value="">-- اختر العنصر --</option>').prop('disabled', true);
                renderItems();
            });

            $('#itemsTableBody').on('click', '.editItem', function() {
                editIndex = $(this).closest('tr').data('index');
                var it = items[editIndex];
                $('#itemType').val(it.itemType).trigger('change');
                setTimeout(() => $('#itemId').val(it.itemId), 0);
                $('#itemQuantity').val(it.quantity);
                $('#NumberOfUnits').val(it.numberOfUnits);
                $('#itemPrice').val(it.price);
                $('#addItem').text('تحديث العنصر');
            });

            $('#itemsTableBody').on('click', '.deleteItem', function() {
                items.splice($(this).closest('tr').data('index'), 1);
                renderItems();
            });

            $('form').submit(function(e) {
                if (!items.length) {
                    alert('يجب إضافة عنصر واحد على الأقل قبل إرسال الطلب.');
                    e.preventDefault();
                }
            });

                const tempDataElement = document.getElementById('tempDataSuccess');
        const jobRoleElement = document.getElementById('hdnJobRole');

        // Get values with proper fallbacks
        const hasSuccessMessage = tempDataElement ? tempDataElement.value === 'true' : false;
        const jobRole = jobRoleElement ? parseInt(jobRoleElement.value) : 0;

        console.log("Success message exists:", hasSuccessMessage);
        console.log("Job role:", jobRole);

        // Mapping of job roles to their respective URLs
        const jobRoleRoutes = {
            0: "/employee/AdminHome",
            1: "/employee/inventoryManager",
            2: "/employee/inventoryClerk",
            3: "/employee/TechnicalManager",
            4: "/employee/technicalClerk",
            5: "/employee/CostManager",
            6: "/employee/costClerk"
        };

        if (hasSuccessMessage) {
            setTimeout(function () {
                const redirectUrl = jobRoleRoutes[jobRole] || "/Employee/LoginPage";
                window.location.href = redirectUrl;
            }, 3000);
        }
        });
    </script>



</body>
</html>


