@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor

@model ColorWeightSize

@{
    Layout = null;
    int jobRole = HttpContextAccessor.HttpContext.Session.GetInt32("JobRole") ?? 0;
}

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="icon" type="image/jpeg" href="~/image/eye.jpg" asp-append-version="true" />
    <link href="https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link href="~/css/Inventory/AddCharacteristic.css" rel="stylesheet" />
    <title>ThoTh</title>
</head>

<div class="container">
    <div class="arrow">
        @{
            if (jobRole == 0)
            {
            <a asp-controller="employee" asp-action="adminhome" class="back">
                <i class='bx bx-left-arrow-circle' style="font-size: 40px; color: white;"></i>
            </a>
            }
            else if (jobRole == 1)
            {
            <a asp-controller="employee" asp-action="inventoryManager" class="back">
                <i class='bx bx-left-arrow-circle' style="font-size: 40px; color: white;"></i>
            </a>
            }
            else if (jobRole == 2)
            {
            <a asp-controller="employee" asp-action="inventoryClerk" class="back">
                <i class='bx bx-left-arrow-circle' style="font-size: 40px; color: white;"></i>
            </a>
            }
        }
    </div>

    <form asp-controller="Inventory" asp-action="EditCharacteristics" id="myform" method="post">
        <input type="hidden" asp-for="ColorWeightSizeId" />
        <input type="hidden" id="hdnJobRole" value="@jobRole" />

        <h1>تعديل المواصفة</h1>

        @if (TempData["Success"] != null)
        {
        <div class="notification success">
            <div class="notification-content">
                <i class='bx bx-check-circle'></i> @TempData["Success"]
            </div>
            <input type="hidden" id="tempDataSuccess" value="true" />
            <div class="progress-bar success"></div>
        </div>
        }

        @if (TempData["Error"] != null)
        {
        <div class="notification error">
            <div class="notification-content">
                <i class='bx bx-error-circle'></i> <span>@TempData["Error"]</span>
            </div>
            <input type="hidden" id="tempDataSuccess" value="false" />
            <div class="progress-bar error"></div>
        </div>
        }

        <div class="inputBox">
            <label>أختر نوع المواصفة</label>
            <select asp-for="Type" id="Type">
                <option value="" disabled selected>اختر النوع</option>
                <option value="0">اللون</option>
                <option value="1">الوزن</option>
                <option value="2">القياس</option>
            </select>
            <span asp-validation-for="Type" class="error"></span>
        </div>

        <div class="inputBox" id="sizeInput" style="display: none;">
            <label>اللون</label>
            <input asp-for="Colored" id="Colored" />
            <span asp-validation-for="Colored" class="error"></span>
        </div>

        <div class="inputBox" id="weightInput" style="display: none;">
            <label>الوزن</label>
            <input asp-for="Weight" id="Weight" />
            <span asp-validation-for="Weight" class="error"></span>
        </div>

        <div class="inputBox" id="colorInput" style="display: none;">
            <label>القياس</label>
            <input asp-for="Size" id="Size" />
            <span asp-validation-for="Size" class="error"></span>
        </div>

        <div class="buttons">
            <div class="Add">
                <input type="submit" value="حفظ التعديلات" class="Add" />
            </div>
        </div>
    </form>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const form = document.getElementById("myform");
        const type = document.getElementById("Type");
        const colorInput = document.getElementById("Colored");
        const weightInput = document.getElementById("Weight");
        const sizeInput = document.getElementById("Size");

        const divColor = document.getElementById("colorInput");
        const divWeight = document.getElementById("weightInput");
        const divSize = document.getElementById("sizeInput");

        function toggleFields() {
            const selected = parseInt(type.value);
            divSize.style.display = selected === 0 ? "block" : "none";
            divWeight.style.display = selected === 1 ? "block" : "none";
            divColor.style.display = selected === 2 ? "block" : "none";
        }

        type.addEventListener("change", toggleFields);
        toggleFields(); // أول تحميل

        const setError = (input, msg) => {
            const parent = input.closest(".inputBox");
            const errorSpan = parent ? parent.querySelector(".error") : null;
            if (errorSpan) {
                errorSpan.innerText = msg;
                errorSpan.style.color = "red";
            }
            input.classList.add("error");
            input.classList.remove("success");
        };

        const setSuccess = (input) => {
            const parent = input.closest(".inputBox");
            const errorSpan = parent ? parent.querySelector(".error") : null;
            if (errorSpan) {
                errorSpan.innerText = "";
            }
            input.classList.remove("error");
            input.classList.add("success");
        };

        function validate() {
            let valid = true;
            const selectedType = parseInt(type.value);

            if (isNaN(selectedType)) {
                setError(type, "برجاء اختيار نوع المواصفة");
                valid = false;
            } else {
                setSuccess(type);
            }

            if (selectedType === 0) { // قياس
                if (!colorInput.value.trim()) {
                    setError(colorInput, "برجاء إدخال القياس");
                    valid = false;
                } else {
                    setSuccess(colorInput);
                }
            } else if (selectedType === 1) { // وزن
                if (!weightInput.value.trim() || isNaN(weightInput.value)) {
                    setError(weightInput, "برجاء إدخال وزن رقمي");
                    valid = false;
                } else {
                    setSuccess(weightInput);
                }
            } else if (selectedType === 2) { // لون
                if (!sizeInput.value.trim()) {
                    setError(sizeInput, "برجاء إدخال اللون");
                    valid = false;
                } else {
                    setSuccess(sizeInput);
                }
            }

            return valid;
        }

        form.addEventListener("submit", function (e) {
            e.preventDefault();
            if (validate()) {
                form.submit();
            }
        });

        const tempDataElement = document.getElementById('tempDataSuccess');
        const jobRoleElement = document.getElementById('hdnJobRole');

        const hasSuccessMessage = tempDataElement ? tempDataElement.value === 'true' : false;
        const jobRole = jobRoleElement ? parseInt(jobRoleElement.value) : 0;

        const jobRoleRoutes = {
            0: "/employee/AdminHome",
            1: "/employee/inventoryManager",
            2: "/employee/inventoryClerk",
            3: "/employee/TechnicalManager",
            4: "/employee/technicalClerk",
            5: "/employee/CostManager",
            6: "/employee/costClerk"
        };

        if (hasSuccessMessage) {
            setTimeout(() => {
                const redirectUrl = jobRoleRoutes[jobRole] || "/Employee/LoginPage";
                window.location.href = redirectUrl;
            }, 3000);
        }
    });
</script>
