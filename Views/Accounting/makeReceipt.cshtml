@model ThothSystemVersion1.ViewModels.ReceiptJobOrderVM
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor

@{
    Layout = "~/Views/Shared/MinimalLayout.cshtml";
    ViewData["Title"] = "Thoth";
    int jobRole = HttpContextAccessor.HttpContext.Session.GetInt32("JobRole") ?? 0;
    var remainingAmount = Model.RemainingAmount;
}
@section HeadContent {
    <link rel="icon" type="image/x-icon" href="~/image/eye.jpg" />
    <link href="~/css/Accounting/PaymentReceipt.css" rel="stylesheet" />
    <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>

    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewBag.Title</title>

    <!-- Bootstrap CSS RTL -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.rtl.min.css" rel="stylesheet">

    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">


    <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
    <link href="~/css/Inventory/ReturnOrder.css" rel="stylesheet" />


    <link rel="stylesheet" href="Home.css" />
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="icon" type="image/x-icon" href="/image/eye.jpg" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Alexandria:wght@100..900&display=swap" rel="stylesheet" />
    <link href="https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />

}

<body>
    <div class="container">
        <div class="arrow">
            @if (jobRole == 0)
            {
                <a asp-controller="Employee" asp-action="AdminHome" class="back">
                    <i class="bx bx-left-arrow-circle" style="font-size:40px;color:white;"></i>
                </a>
            }
            else if (jobRole == 6)
            {
                <a asp-controller="Employee" asp-action="AccountingManager" class="back">
                    <i class="bx bx-left-arrow-circle" style="font-size:40px;color:white;"></i>
                </a>
            }
            else if (jobRole == 7)
            {
                <a asp-controller="Employee" asp-action="AccountingClerk" class="back">
                    <i class="bx bx-left-arrow-circle" style="font-size:40px;color:white;"></i>
                </a>
            }
        </div>
        @if (TempData["Success"] != null)
        {
            <div class="notification success">
                <div class="notification-content">
                    <i class='bx bx-check-circle'></i> @TempData["Success"]

                </div>
                <input type="hidden" id="tempDataSuccess" value="true" />
                <div class="progress-bar success"></div>
            </div>
        }

        @if (TempData["Error"] != null)
        {
            <div class="notification error">
                <div class="notification-content">
                    <i class='bx bx-error-circle'></i>
                    <span>@TempData["Error"]</span>
                </div>
                <input type="hidden" id="tempDataSuccess" value="false" />

                <div class="progress-bar error"></div>

            </div>
        }
        <h1>طلب استلام اموال</h1>

        <!-- Hidden fields for JavaScript access -->

        <h2>تفاصيل الطلبية</h2>
        <div class="mainBox">
            <dl class="colCont1">

                <div class="row-style">
                    <dd>
                        @Html.DisplayFor(model => model.EmployeeName)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.EmployeeName)
                    </dt>
                </div>
                <div class="row-style">
                    <dd>
                        @Html.DisplayFor(model => model.CustomerName)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.CustomerName)
                    </dt>
                </div>
                <div class="row-style">
                    <dd>
                        @Html.DisplayFor(model => model.OrderProgress)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.OrderProgress)
                    </dt>
                </div>
                <div class="row-style">
                    <dd>
                        @Html.DisplayFor(model => model.EarnedRevenue)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.EarnedRevenue)
                    </dt>
                </div>
                <div class="row-style">
                    <dd>
                        @Html.DisplayFor(model => model.JobOrdernotes)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.JobOrdernotes)
                    </dt>
                </div>
                <div class="row-style">
                    <dd>
                        @Html.DisplayFor(model => model.UnearnedRevenue)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.UnearnedRevenue)
                    </dt>
                </div>
                <div class="row-style">
                    <dd>
                        @Html.DisplayFor(model => model.RemainingAmount)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.RemainingAmount)
                    </dt>
                </div>
            </dl>
        </div>

        @* @if (TempData["Success"] != null) *@
        @* { *@
        @*     <div class="alert alert-success alert-dismissible fade show" role="alert"> *@

        @*         <strong>Success!</strong> @TempData["Success"] *@
        @*         <button type="button" class="close" data-dismiss="alert" aria-label="Close"> *@
        @*             <span aria-hidden="true">&times;</span> *@
        @*         </button> *@
        @*     </div> *@
        @* } *@

        @* @if (TempData["Error"] != null) *@
        @* { *@
        @*     <div class="alert alert-danger alert-dismissible fade show" role="alert"> *@
        @*         <strong>Error!</strong> @TempData["Error"] *@
        @*         <button type="button" class="close" data-dismiss="alert" aria-label="Close"> *@
        @*             <span aria-hidden="true">&times;</span> *@
        @*         </button> *@
        @*     </div> *@
        @* } *@

        <div class="mainBox">
            <h2>اضافة امر استلام</h2>
            <div class="mainBox">
                <form method="post" asp-action="makereceipt" asp-controller="accounting" id="receiptForm" novalidate>
                    <input type="hidden" asp-for="JobOrderId" />
                    <input type="hidden" id="hdnRemainingAmount" value="@remainingAmount" />

                    <div class="colCont">
                        <label asp-for="Amount"></label>
                        <input asp-for="Amount" class="form-control" id="txtAmount" placeholder="الرجاء ادخال مبلغ بين 0.01 و  @remainingAmount" />
                        @* <small>Enter amount between 0.01 and @remainingAmount</small> *@
                        <span asp-validation-for="Amount"></span>
                        <div id="amountError" style="display:none;"></div>
                    </div>

                    <div class="rowCont">
                        <div class="colCont">
                            <label asp-for="ReceiptDate"></label>
                            <input asp-for="ReceiptDate" class="form-control" type="date"
                                   value="@DateTime.Now.ToString("yyyy-MM-dd")" disabled />
                            <span asp-validation-for="ReceiptDate"></span>
                        </div>
                        <div class="colCont">
                            <label asp-for="ReceiptNotes"></label>
                            <textarea asp-for="ReceiptNotes" class="form-control" rows="2"></textarea>
                            <span asp-validation-for="ReceiptNotes"></span>
                        </div>
                    </div>

                    <button type="submit" class="editBtn">حفظ</button>
                </form>
            </div>
        </div>

    </div>
</body>
@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Form validation logic
            const form = document.getElementById('receiptForm');
            const amountInput = document.getElementById('txtAmount');
            const errorDiv = document.getElementById('amountError');
            const remaining = parseFloat(document.getElementById('hdnRemainingAmount').value);

            if (form) {
                form.addEventListener('submit', function(e) {
                    const val = parseFloat(amountInput.value);
                    let msg = '';

                    if (isNaN(val)) {
                        msg = 'الرجاء ادخال رقم صحيح';
                    } else if (val <= 0) {
                        msg = 'الرجاء ادخال رقم اكبر من صفر';
                    } else if (val > remaining) {
                        msg = `لا يمكن ان يزيد المبلغ عن (${remaining})`;
                    }

                    if (msg) {
                        e.preventDefault();
                        errorDiv.textContent = msg;
                        errorDiv.style.display = 'block';
                        amountInput.classList.add('is-invalid');
                    }
                });
            }

            // Redirect logic

                const tempDataElement = document.getElementById('tempDataSuccess');
        const jobRoleElement = document.getElementById('hdnJobRole');

        // Get values with proper fallbacks
        const hasSuccessMessage = tempDataElement ? tempDataElement.value === 'true' : false;
        const jobRole = jobRoleElement ? parseInt(jobRoleElement.value) : 0;

        console.log("Success message exists:", hasSuccessMessage);
        console.log("Job role:", jobRole);

        // Mapping of job roles to their respective URLs
        const jobRoleRoutes = {
            0: "/employee/AdminHome",
            1: "/employee/inventoryManager",
            2: "/employee/inventoryClerk",
            3: "/employee/TechnicalManager",
            4: "/employee/technicalClerk",
            5: "/employee/CostManager",
            6: "/employee/costClerk"
        };

        if (hasSuccessMessage) {
            setTimeout(function () {
                const redirectUrl = jobRoleRoutes[jobRole] || "/Employee/LoginPage";
                window.location.href = redirectUrl;
            }, 3000);
        }
        });
    </script>
}

