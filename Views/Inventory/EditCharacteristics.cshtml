@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor

@model ColorWeightSize
@{
    ViewData["Title"] = "Thoth";
    Layout = null;
}
@{

    int jobRole = HttpContextAccessor.HttpContext.Session.GetInt32("JobRole") ?? 0;
    Console.WriteLine("JobRole: " + jobRole);
}
<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>

    <!-- Bootstrap CSS RTL -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.rtl.min.css" rel="stylesheet">

    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

    <link rel="icon" type="image/x-icon" href="/image/eye.jpg" />
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="Home.css" />
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="icon" type="image/x-icon" href="/image/eye.jpg" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Alexandria:wght@100..900&display=swap" rel="stylesheet" />
    <link href="https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.rtl.min.css" rel="stylesheet">
    <link rel="stylesheet" href="~/css/Inventory/EditCharacteristics.css" asp-append-version="true" />

</head>


<body>
    <div class="arrow">
        @{
            // admin
            if (jobRole == 0)
            {
                <a asp-controller="employee" asp-action="adminhome" class="back">
                    <i class='bx bx-left-arrow-circle' style="font-size: 40px; color: white;"></i>
                </a>

            } // inventory manager
            else if (jobRole == 1)
            {
                <a asp-controller="employee" asp-action="InventoryManager" class="back">
                    <i class='bx bx-left-arrow-circle' style="font-size: 40px; color: white;"></i>
                </a>
            }
            else if (jobRole == 2)
            {
                <a asp-controller="employee" asp-action="InventoryClerk" class="back">
                    <i class='bx bx-left-arrow-circle' style="font-size: 40px; color: white;"></i>
                </a>
            }


        }
    </div>

    <div class="form-container">




        <h1>تعديل المواصفات</h1>

        @* Success and Error Messages *@
        @if (TempData["Success"] != null)
        {
            <div class="notification success">
                <div class="notification-content">
                    <i class='bx bx-check-circle'></i> @TempData["Success"]

                </div>
                <input type="hidden" id="tempDataSuccess" value="true" />
                <div class="progress-bar success"></div>
            </div>
        }

        @if (TempData["Error"] != null)
        {
            <div class="notification error">
                <div class="notification-content">
                    <i class='bx bx-error-circle'></i>
                    <span>@TempData["Error"]</span>
                </div>
                <input type="hidden" id="tempDataSuccess" value="false" />

                <div class="progress-bar error"></div>

            </div>
        }

        <form asp-action="EditCharacteristics" method="post">
            <input type="hidden" asp-for="ColorWeightSizeId" />

            <div class="input-control">
                <label asp-for="Type" class="textlabel">نوع المواصفة</label>
                <select asp-for="Type" class="form-select" id="typeSelect" onchange="showRelevantField()">
                    <option value="">اختر النوع</option>
                    @foreach (var item in ViewBag.TypeOptions)
                    {
                        <option value="@item.Value">@item.Text</option>
                    }
                </select>
                <span asp-validation-for="Type" class="text-danger"></span>
            </div>

            <!-- حجم -->
            <div class="input-control" id="sizeFieldGroup" style="display: none;">
                <label asp-for="Size" class="textlabel">الحجم</label>
                <input asp-for="Size" class="place" />
                <span asp-validation-for="Size" class="text-danger"></span>
            </div>

            <!-- وزن -->
            <div class="input-control" id="weightFieldGroup" style="display: none;">
                <label asp-for="Weight" class="textlabel">الوزن (كجم)</label>
                <input asp-for="Weight" type="number" step="0.01" class="place" />
                <span asp-validation-for="Weight" class="text-danger"></span>
            </div>

            <!-- لون -->
            @* <div class="mb-3" id="colorFieldGroup" style="display: none;"> *@
            @*     <label asp-for="Colored" class="form-label">اللون</label> *@
            @*     <input asp-for="Colored" class="form-control" /> *@
            @*     <span asp-validation-for="Colored" class="text-danger"></span> *@
            @* </div> *@

            <!-- لون -->
            <div class="input-control" id="colorFieldGroup" style="display: none;">
                <label class="textlabel">اللون</label>
                <input type="text" class="place" id="coloredInput"
                       value="@(Model.Colored?.StartsWith("0x") == true ? "" : Model.Colored)" />
                <input type="hidden" asp-for="Colored" id="actualColored" />
                <span asp-validation-for="Colored" class="text-danger"></span>
            </div>

            <div class="button-container">
                <button type="submit" class="btn1">حفظ التغييرات</button>
                @* <a href="@Url.Action("Index")" class="btn btn-outline-secondary">العودة للقائمة</a> *@
            </div>
        </form>
    </div>

    <script>
        // عرض الحقل المناسب عند تغيير النوع
        function showRelevantField() {
            // إخفاء جميع الحقول أولاً
            document.getElementById('sizeFieldGroup').style.display = 'none';
            document.getElementById('weightFieldGroup').style.display = 'none';
            document.getElementById('colorFieldGroup').style.display = 'none';

            // عرض الحقل المناسب حسب الاختيار
            const typeSelect = document.getElementById('typeSelect');
            switch(typeSelect.value) {
                case '1': // حجم
                    document.getElementById('sizeFieldGroup').style.display = 'block';
                    break;
                case '2': // وزن
                    document.getElementById('weightFieldGroup').style.display = 'block';
                    break;
                case '3': // لون
                    document.getElementById('colorFieldGroup').style.display = 'block';
                    break;
            }
        }

        // تهيئة النموذج عند التحميل
        document.addEventListener('DOMContentLoaded', function() {
            // تعيين قيمة النوع إذا كانت موجودة
            const typeSelect = document.getElementById('typeSelect');
            if (@Model.Type > 0) {
                typeSelect.value = '@Model.Type';
                showRelevantField();

                // تعيين القيمة الحالية للحقل المناسب
                switch(@Model.Type) {
                    case 1:
                        document.getElementById('Size').value = '@Model.Size';
                        break;
                    case 2:
                        document.getElementById('Weight').value = '@Model.Weight';
                        break;
                    case 3:
                        document.getElementById('Colored').value = '@Model.Colored';
                        break;
                }
            }
        });
                document.addEventListener('DOMContentLoaded', function() {
            // معالجة اللون عند التحميل
            const coloredValue = '@Html.Raw(Model.Colored)';
            if (coloredValue.startsWith("0x")) {
                // تحويل الهكس إلى سترينج
                const hex = coloredValue.substring(2);
                let str = '';
                for (let i = 0; i < hex.length; i += 2) {
                    str += String.fromCharCode(parseInt(hex.substr(i, 2), 16));
                }
                document.getElementById('coloredInput').value = str;
            } else {
                document.getElementById('coloredInput').value = coloredValue;
            }

            // تحديث القيمة المخفية عند التعديل
            document.getElementById('coloredInput').addEventListener('input', function() {
                document.getElementById('actualColored').value = this.value;
            });
        });
    </script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>