@model ThothSystemVersion1.ViewModels.ReceiptJobOrderVM
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor

@{
    Layout = "~/Views/Shared/MinimalLayout.cshtml";
    ViewData["Title"] = "Thoth";
    int jobRole = HttpContextAccessor.HttpContext.Session.GetInt32("JobRole") ?? 0;
    var remainingAmount = Model.RemainingAmount;
}
@section HeadContent {
    <link rel="icon" type="image/x-icon" href="~/image/eye.jpg" />
    <link href="~/css/Accounting/PaymentReceipt.css" rel="stylesheet" />
    <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
}

<body>
    <div class="container">
        <div class="arrow">
            @if (jobRole == 0)
            {
                <a asp-controller="Employee" asp-action="AdminHome" class="back">
                    <i class="bx bx-left-arrow-circle" style="font-size:40px;color:white;"></i>
                </a>
            }
            else if (jobRole == 6)
            {
                <a asp-controller="Employee" asp-action="AccountingManager" class="back">
                    <i class="bx bx-left-arrow-circle" style="font-size:40px;color:white;"></i>
                </a>
            }
            else if (jobRole == 7)
            {
                <a asp-controller="Employee" asp-action="AccountingClerk" class="back">
                    <i class="bx bx-left-arrow-circle" style="font-size:40px;color:white;"></i>
                </a>
            }
        </div>
        <div class="redirect">
            <input type="hidden" id="tempDataSuccess" value="@(TempData["Success"] != null ? "true" : "false")" />
            <input type="hidden" id="hdnJobRole" value="@jobRole" />
        </div>
        <h1>طلب استلام اموال</h1>

        <!-- Hidden fields for JavaScript access -->

        <h2>تفاصيل الطلبية</h2>
        <div class="mainBox">
            <dl class="colCont1">

                <div class="row-style">
                    <dd>
                        @Html.DisplayFor(model => model.EmployeeName)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.EmployeeName)
                    </dt>
                </div>
                <div class="row-style">
                    <dd>
                        @Html.DisplayFor(model => model.CustomerName)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.CustomerName)
                    </dt>
                </div>
                <div class="row-style">
                    <dd>
                        @Html.DisplayFor(model => model.OrderProgress)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.OrderProgress)
                    </dt>
                </div>
                <div class="row-style">
                    <dd>
                        @Html.DisplayFor(model => model.EarnedRevenue)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.EarnedRevenue)
                    </dt>
                </div>
                <div class="row-style">
                    <dd>
                        @Html.DisplayFor(model => model.JobOrdernotes)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.JobOrdernotes)
                    </dt>
                </div>
                <div class="row-style">
                    <dd>
                        @Html.DisplayFor(model => model.UnearnedRevenue)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.UnearnedRevenue)
                    </dt>
                </div>
                <div class="row-style">
                    <dd>
                        @Html.DisplayFor(model => model.RemainingAmount)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.RemainingAmount)
                    </dt>
                </div>
            </dl>
        </div>

        @* @if (TempData["Success"] != null) *@
        @* { *@
        @*     <div class="alert alert-success alert-dismissible fade show" role="alert"> *@

        @*         <strong>Success!</strong> @TempData["Success"] *@
        @*         <button type="button" class="close" data-dismiss="alert" aria-label="Close"> *@
        @*             <span aria-hidden="true">&times;</span> *@
        @*         </button> *@
        @*     </div> *@
        @* } *@

        @* @if (TempData["Error"] != null) *@
        @* { *@
        @*     <div class="alert alert-danger alert-dismissible fade show" role="alert"> *@
        @*         <strong>Error!</strong> @TempData["Error"] *@
        @*         <button type="button" class="close" data-dismiss="alert" aria-label="Close"> *@
        @*             <span aria-hidden="true">&times;</span> *@
        @*         </button> *@
        @*     </div> *@
        @* } *@

        <div class="mainBox">
            <h2>اضافة امر استلام</h2>
            <div class="mainBox">
                <form method="post" asp-action="makereceipt" asp-controller="accounting" id="receiptForm" novalidate>
                    <input type="hidden" asp-for="JobOrderId" />
                    <input type="hidden" id="hdnRemainingAmount" value="@remainingAmount" />

                    <div class="colCont">
                        <label asp-for="Amount"></label>
                        <input asp-for="Amount" class="form-control" id="txtAmount" placeholder="الرجاء ادخال مبلغ بين 0.01 و  @remainingAmount" />
                        @* <small>Enter amount between 0.01 and @remainingAmount</small> *@
                        <span asp-validation-for="Amount"></span>
                        <div id="amountError" style="display:none;"></div>
                    </div>

                    <div class="rowCont">
                        <div class="colCont">
                            <label asp-for="ReceiptDate"></label>
                            <input asp-for="ReceiptDate" class="form-control" type="date"
                                   value="@DateTime.Now.ToString("yyyy-MM-dd")" disabled />
                            <span asp-validation-for="ReceiptDate"></span>
                        </div>
                        <div class="colCont">
                            <label asp-for="ReceiptNotes"></label>
                            <textarea asp-for="ReceiptNotes" class="form-control" rows="2"></textarea>
                            <span asp-validation-for="ReceiptNotes"></span>
                        </div>
                    </div>

                    <button type="submit" class="editBtn">حفظ</button>
                </form>
            </div>
        </div>

    </div>
</body>
@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Form validation logic
            const form = document.getElementById('receiptForm');
            const amountInput = document.getElementById('txtAmount');
            const errorDiv = document.getElementById('amountError');
            const remaining = parseFloat(document.getElementById('hdnRemainingAmount').value);

            if (form) {
                form.addEventListener('submit', function(e) {
                    const val = parseFloat(amountInput.value);
                    let msg = '';

                    if (isNaN(val)) {
                        msg = 'الرجاء ادخال رقم صحيح';
                    } else if (val <= 0) {
                        msg = 'الرجاء ادخال رقم اكبر من صفر';
                    } else if (val > remaining) {
                        msg = `لا يمكن ان يزيد المبلغ عن (${remaining})`;
                    }

                    if (msg) {
                        e.preventDefault();
                        errorDiv.textContent = msg;
                        errorDiv.style.display = 'block';
                        amountInput.classList.add('is-invalid');
                    }
                });
            }

            // Redirect logic
            const successElement = document.getElementById('tempDataSuccess');
            const jobRoleElement = document.getElementById('hdnJobRole');

            if (successElement && successElement.value === 'true') {
                // Show redirect notification
                const notice = document.createElement('div');
                notice.className = 'redirect-notice';
                notice.innerHTML = 'تم الاستلام بنجاح';
                document.body.appendChild(notice);

                const role = jobRoleElement ? parseInt(jobRoleElement.value) : 0;

                const routes = {
                    0: '@Url.Action("AdminHome", "Employee")',
                    6: '@Url.Action("AccountingManager", "Employee")',
                    7: '@Url.Action("AccountingClerk", "Employee")'
                };

                setTimeout(() => {
                    notice.remove();
                    window.location.href = routes[role] || '@Url.Action("LoginPage", "Employee")';
                }, 4000);
            }
        });
    </script>
}

