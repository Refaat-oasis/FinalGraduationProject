@model Employee;
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor


@{

    int jobRole = HttpContextAccessor.HttpContext.Session.GetInt32("JobRole") ?? 0;
    string employeeName = HttpContextAccessor.HttpContext.Session.GetString("EmployeeName") ?? "Unknown";
    string employeeId = HttpContextAccessor.HttpContext.Session.GetString("EmployeeID") ?? "Unknown";
    Console.WriteLine("JobRole: " + jobRole);
    Console.WriteLine("EmployeeName: " + employeeName);
    Console.WriteLine("EmployeeId: " + employeeId);
}
<!DOCTYPE html>
<html lang="ar">
<head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/x-icon" href="/image/eye.jpg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="@Url.Content("~/css/LogIn.css")" />
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="icon" type="image/x-icon" href="@Url.Content("~/photos/eye.jpg")" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Alexandria:wght@100..900&display=swap" rel="stylesheet" />
    <link href="https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css" rel="stylesheet" />
    <link rel="icon" type="image/x-icon" href="/image/eye.jpg" />

    <link href="@Url.Content("~/css/Admin/adminHome.css")" rel="stylesheet" />

    <link rel="icon"
          type="image/jpeg"
          href="~/image/eye.jpg"
          asp-append-version="true" />

    <style>
        /* #reorderMessages { */
        /*     position: fixed; */
        /*     top: 10%; */
        /*     left: 0; */
        /*     /* background-color: #ffcc00;  */ */
        /*     /* background-color: rgba(0, 0, 0, 0.7); */ */
        /*     color: white; */
        /*     padding: 10px; */
        /*     width: 250px; */
        /*     max-height: 90%; */
        /*     overflow-y: auto; */
        /*     z-index: 9999; */
        /*     box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.1); */
        /*     border-radius: 5px; */
        /*     display: none; */
        /* } */

        /*     /* Close button style */ */
        /*     #reorderMessages .close-btn { */
        /*         position: absolute; */
        /*         top: 5px; */
        /*         right: 5px; */
        /*         background-color: transparent; */
        /*         border: none; */
        /*         color: black; */
        /*         font-size: 18px; */
        /*         cursor: pointer; */
        /*     } */

        /*         #reorderMessages .close-btn:hover { */
        /*             color: red; */
        /*         } */

        /* .reorder-item { */
        /*     margin-bottom: 0.75rem; */
        /*     padding: 0.5rem; */
        /*     border-bottom: 1px solid rgba(0,0,0,0.1); */
        /* } */

        .reorderMsg {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 9999;
            background-color: #ffebee; /* أحمر للتنبيه */
            border: 2px solid red;
            color: black;
            padding: 15px 25px;
            border-radius: 10px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.2);
            display: none;
            font-size: 18px;
            opacity: 0;
            transition: opacity 0.5s ease-in-out, transform 0.5s ease-in-out;
            transform: translateY(-20px);
        }

            .reorderMsg.show {
                display: block;
                opacity: 1;
                transform: translateY(0);
            }

    </style>

</head>
<body>
    <div id="reorderMessages" class="reorderMsg">
        @* <button class="close-btn" onclick="closeReorderMessages()">×</button> *@
        <!-- The reorder messages will be dynamically added here -->
    </div>

    <div class="sidebar">
        <ul class="dropdown">
            <li>  @Html.ActionLink("عرض الملف الشخصي", "EmployeeProfile", "Employee", new { employeeId }) </li>
            <li onclick="toggleDropdown(this)">
                إدارة المطبعة
                <ul>
                    <li>@Html.ActionLink("عرض جميع الموظفين", "ViewAllEmployee", "Admin")</li>
                    <li>@Html.ActionLink("إضافة موظف جديد", "AddEmployee", "Admin")</li>
                </ul>
            </li>

            <li onclick="toggleDropdown(this)">
                المخازن
                <ul>
                    <li>@Html.ActionLink("إضافة صنف ورق جديد", "NewPaper", "Inventory")</li>
                    <li>@Html.ActionLink("إضافة حبر جديد", "NewInk", "Inventory")</li>
                    <li>@Html.ActionLink("إضافة مستلزمات جديده", "NewSupply", "Inventory")</li>

                    <li>@Html.ActionLink("عرض مخزون الورق", "viewallpaper", "Inventory")</li>
                    <li>@Html.ActionLink("عرض مخزون الحبر", "ViewAllInk", "Inventory")</li>
                    <li>@Html.ActionLink("عرض مخزون المستلزمات", "ViewAllsupply", "Inventory")</li>

                    <li>@Html.ActionLink("جرد المخزون", "physicalCount", "Inventory")</li>

                    <li>@Html.ActionLink("عرض جميع الموردين", "ViewAllVendor", "Inventory")</li>
                    <li>@Html.ActionLink("إضافة مورد جديد", "AddVendor", "Inventory")</li>

                    <li>@Html.ActionLink("إضافة اله جديده", "AddMachine", "Inventory")</li>
                    <li>@Html.ActionLink("إضافة قطع غيار جديده", "AddSparePart", "Inventory")</li>



                    <li>@Html.ActionLink("المرتجعات", "ReturnOrder", "Inventory")</li>
                    <li>@Html.ActionLink("المشتريات", "purchaseAll", "Inventory")</li>
                    <li>@Html.ActionLink("تقارير المخازن", "inventoryReports", "Inventory")</li>
                    <li>@Html.ActionLink("صرف مخزن دائم", "PerpetualRequisite", "Inventory")</li>

                    <li>@Html.ActionLink("إضافة المواصفات", "AddCharacteristic", "Inventory")</li>
                    <li>@Html.ActionLink("عرض جميع المواصفات", "ViewAllColorWeightSize", "Inventory")</li>
                    <li>@Html.ActionLink("عرض الآلات", "ViewAllMachineStore", "Inventory")</li>
                    <li>@Html.ActionLink("عرض قطع غيار الالات", "ViewAllSpareParts", "Inventory")</li>

                </ul>
            </li>

            <li onclick="toggleDropdown(this)">
                الفني
                <ul>
                    <li>@Html.ActionLink("اذونات الصرف", "CreateRequisite", "Technical")</li>
                    <li>@Html.ActionLink("إضافة عميل", "AddCustomer", "Technical")</li>
                    <li>@Html.ActionLink("عرض جميع العملاء", "ViewAllCustomer", "Technical")</li>
                    <li>@Html.ActionLink("عرض جميع الطلبيات", "ViewAllJobOrder", "Technical")</li>
                    <li>@Html.ActionLink("إضافة طلبية جديدة", "CreateNewJobOrder", "Technical")</li>

                </ul>
            </li>

            <li onclick="toggleDropdown(this)">
                التكاليف
                <ul>
                    <li>@Html.ActionLink("إضافه عامل جديد", "AddLabour", "Cost")</li>
                    <li>@Html.ActionLink("عرض جميع العمال", "ViewAllLabour", "Cost")</li>
                    <li>@Html.ActionLink("إضافه اله جديدة", "AddMachine", "Cost")</li>
                    <li>@Html.ActionLink("عرض جميع الالات", "ViewAllMachines", "Cost")</li>
                    <li>@Html.ActionLink(" عرض اوامر التصنيع للمقايسة", "ViewAllJobOrder", "Cost")</li>

                </ul>
            </li>

            <li onclick="toggleDropdown(this)">
                الحسابات
                <ul>
                    <li>@Html.ActionLink("طلب استلام اموال", "viewJobOrderWithRemainingAmount", "accounting")</li>
                    <li>@Html.ActionLink("طلب دفع اموال", "viewPurchaseOrderdsWithRemainingAmount", "Accounting")</li>
                    <li>@Html.ActionLink("تعديل حسابات الطلبية", "viewJobOrderWithCost", "Accounting")</li>

                </ul>
            </li>
        </ul>

        <div class="button">
            @Html.ActionLink("تسجيل الخروج", "Logout", "Employee", null, new { @class = "btnBack" })
        </div>
    </div>

    <div class="container">
        <h1>تحوت يتمني لك يوم سعيد</h1>
        <h1>
            مرحبا يا : @{
                @Html.Raw(HttpContextAccessor.HttpContext.Session.GetString("EmployeeName"))
            }
        </h1>
        <p>يهدف نظام تحوت إلى تحسين كفاءة العمل في المطبعة من خلال توفير الوقت والجهد للموظفين</p>
        <p>مما يضمن إنتاجًا عالي الجودة بأعلى مستويات الدقة والكفاءة</p>
    </div>

    <script src="@Url.Content("~/js/Admin/adminHome.js")"></script>

</body>
</html>


<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/8.0.7/signalr.min.js"
        integrity="sha512-7SRCYIJtR6F8ocwW7UxW6wGKqbSyqREDbfCORCbGLatU0iugBLwyOXpzhkPyHIFdBO0K2VCu57fvP2Twgx1o2A=="
        crossorigin="anonymous" referrerpolicy="no-referrer">
</script>
<script>
    (function setupInventoryHub() {
      console.log("[InventoryHub] ↗ Building connection…");

      const hub = new signalR.HubConnectionBuilder()
        .withUrl("/InventoryReorderPoint")
        .configureLogging(signalR.LogLevel.Information)
        .build();

      hub.onclose(err => {
        if (err) {
          console.error("[InventoryHub] Connection closed with error:", err.toString());
        } else {
          console.warn("[InventoryHub] Connection closed gracefully.");
        }
      });

      // Handler for incoming messages — appends each one
      hub.on("recieveInventoryBalances", payload => {
        console.log("[InventoryHub] 📥 Message received:", payload);

        const container = document.getElementById("reorderMessages");
        container.style.display = "block";

        const msgDiv = document.createElement("div");
        msgDiv.className = "reorder-item";
        msgDiv.textContent = payload;
        container.appendChild(msgDiv);
      });
      console.log("[InventoryHub] ✅ Handler for 'recieveInventoryBalances' registered.");

      function sleep(ms) {
        return new Promise(resolve => setTimeout(resolve, ms));
      }

      async function startAndInvokeAll() {
        try {
          console.log("[InventoryHub] ▶ Starting connection…");
          await hub.start();
          console.log("[InventoryHub] ✅ Connection established. ID:", hub.connectionId);

          const methods = [
            "checkInventoryBalancePaper",
            "checkInventoryBalanceInk",
            "checkInventoryBalanceSupply",
            "checkInventoryBalanceSpareParts"
          ];

          for (let i = 0; i < methods.length; i++) {
            const method = methods[i];
            console.log(`[InventoryHub] 🔔 Invoking '${method}'…`);
            await hub.invoke(method);
            console.log(`[InventoryHub] ✅ '${method}' invoked.`);
            if (i < methods.length - 1) {
              console.log(`[InventoryHub] ⏱ Waiting 3s before next invoke…`);
              await sleep(3000);
            }
          }

          console.log("[InventoryHub] 🎉 All checks invoked.");

          // After all invokes, wait 3s then hide the container
          setTimeout(() => {
            const container = document.getElementById("reorderMessages");
            container.style.display = "none";
            console.log("[InventoryHub] 🚫 reorderMessages container hidden.");
          }, 3000);

        } catch (err) {
          console.error("[InventoryHub] ❌ Error in start/invoke sequence:", err.toString());
        }
      }

      startAndInvokeAll();
    })();
</script>
