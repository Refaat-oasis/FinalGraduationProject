@model Employee;
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor


@{

    int jobRole = HttpContextAccessor.HttpContext.Session.GetInt32("JobRole") ?? 0;
    string employeeName = HttpContextAccessor.HttpContext.Session.GetString("EmployeeName") ?? "Unknown";
    string employeeId = HttpContextAccessor.HttpContext.Session.GetString("EmployeeID") ?? "Unknown";
    Console.WriteLine("JobRole: " + jobRole);
    Console.WriteLine("EmployeeName: " + employeeName);
    Console.WriteLine("EmployeeId: " + employeeId);
}
<!DOCTYPE html>
<html lang="ar">
<head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/x-icon" href="/image/eye.jpg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="@Url.Content("~/css/LogIn.css")" />
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="icon" type="image/x-icon" href="@Url.Content("~/photos/eye.jpg")" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Alexandria:wght@100..900&display=swap" rel="stylesheet" />
    <link href="https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css" rel="stylesheet" />
    <link rel="icon" type="image/x-icon" href="/image/eye.jpg" />

    <link href="@Url.Content("~/css/Admin/adminHome.css")" rel="stylesheet" />

    <link rel="icon"
    type="image/jpeg"
    href="~/image/eye.jpg"
    asp-append-version="true" />

    <style>
        #reorderMessages {
        position: fixed;
        top: 10%;
        left: 0;
        /* background-color: #ffcc00;  */
        /* background-color: rgba(0, 0, 0, 0.7); */
        color: white;
        padding: 10px;
        width: 250px;
        max-height: 90%;
        overflow-y: auto;
        z-index: 9999;
        box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.1);
        border-radius: 5px;
        display: none;
        }

        /* Close button style */
        #reorderMessages .close-btn {
        position: absolute;
        top: 5px;
        right: 5px;
        background-color: transparent;
        border: none;
        color: black;
        font-size: 18px;
        cursor: pointer;
        }

        #reorderMessages .close-btn:hover {
        color: red;
        }
    </style>


</head>
<body>
    <div id="reorderMessages" class="reorderMsg">
        <button class="close-btn" onclick="closeReorderMessages()">×</button>
        <!-- The reorder messages will be dynamically added here -->
    </div>

    <div class="sidebar">
        <ul class="dropdown">
            <li>  @Html.ActionLink("عرض الملف الشخصي", "EmployeeProfile", "Employee", new { employeeId }) </li>
            <li onclick="toggleDropdown(this)">
                إدارة المطبعة
                <ul>
                    <li>@Html.ActionLink("عرض جميع الموظفين", "ViewAllEmployee", "Admin")</li>
                    <li>@Html.ActionLink("إضافة موظف جديد", "AddEmployee", "Admin")</li>
                </ul>
            </li>

            <li onclick="toggleDropdown(this)">
                المخازن
                <ul>
                    <li>@Html.ActionLink("إضافة صنف ورق جديد", "NewPaper", "Inventory")</li>
                    <li>@Html.ActionLink("إضافة حبر جديد", "NewInk", "Inventory")</li>
                    <li>@Html.ActionLink("إضافة مستلزمات جديده", "NewSupply", "Inventory")</li>

                    <li>@Html.ActionLink("عرض مخزون الورق", "viewallpaper", "Inventory")</li>
                    <li>@Html.ActionLink("عرض مخزون الحبر", "ViewAllInk", "Inventory")</li>
                    <li>@Html.ActionLink("عرض مخزون المستلزمات", "ViewAllsupply", "Inventory")</li>

                    <li>@Html.ActionLink("جرد المخزون", "physicalCount", "Inventory")</li>

                    <li>@Html.ActionLink("عرض جميع الموردين", "ViewAllVendor", "Inventory")</li>
                    <li>@Html.ActionLink("إضافة مورد جديد", "AddVendor", "Inventory")</li>

                    <li>@Html.ActionLink("المرتجعات", "ReturnOrder", "Inventory")</li>
                    <li>@Html.ActionLink("المشتريات", "purchaseAll", "Inventory")</li>
                    <li>@Html.ActionLink("تقارير المخازن", "inventoryReports", "Inventory")</li>

                    <li>@Html.ActionLink("إضافة المواصفات", "AddCharacteristic", "Inventory")</li>
                    <li>@Html.ActionLink("تعديل المواصفات", "EditCharacteristics", "Inventory")</li>
                    <li>@Html.ActionLink("عرض جميع المواصفات", "ViewAllColorWeightSize", "Inventory")</li>

                </ul>
            </li>

            <li onclick="toggleDropdown(this)">
                الفني
                <ul>
                    <li>@Html.ActionLink("اذونات الصرف", "CreateRequisite", "Technical")</li>
                    <li>@Html.ActionLink("إضافة عميل", "AddCustomer", "Technical")</li>
                    <li>@Html.ActionLink("عرض جميع العملاء", "ViewAllCustomer", "Technical")</li>
                    <li>@Html.ActionLink("عرض جميع الطلبيات", "ViewAllJobOrder", "Technical")</li>
                    <li>@Html.ActionLink("إضافة طلبية جديدة", "CreateNewJobOrder", "Technical")</li>

                </ul>
            </li>

            <li onclick="toggleDropdown(this)">
                التكاليف
                <ul>
                    <li>@Html.ActionLink("إضافه عامل جديد", "AddLabour", "Cost")</li>
                    <li>@Html.ActionLink("عرض جميع العمال", "ViewAllLabour", "Cost")</li>
                    <li>@Html.ActionLink("إضافه اله جديدة", "AddMachine", "Cost")</li>
                    <li>@Html.ActionLink("عرض جميع الالات", "ViewAllMachines", "Cost")</li>
                    <li>@Html.ActionLink("عرض جميع أوامر التصنيع", "ViewAllJobOrder", "Cost")</li>

                </ul>
            </li>

            <li onclick="toggleDropdown(this)">
                الحسابات
                <ul>
                    <li>@Html.ActionLink("طلب استلام اموال", "viewJobOrderWithRemainingAmount", "accounting")</li>
                    <li>@Html.ActionLink("طلب دفع اموال", "viewPurchaseOrderdsWithRemainingAmount", "Accounting")</li>
                    <li>@Html.ActionLink("تعديل حسابات الطلبية", "viewJobOrderWithCost", "Accounting")</li>

                </ul>
            </li>
        </ul>

        <div class="button">
            @Html.ActionLink("تسجيل الخروج", "Logout", "Employee", null, new { @class = "btnBack" })
        </div>
    </div>

    <div class="container">
        <h1>تحوت يتمني لك يوم سعيد</h1>
        <h1>مرحبا يا : @{
                @Html.Raw(HttpContextAccessor.HttpContext.Session.GetString("EmployeeName"))
            }
        </h1>
        <p>يهدف نظام تحوت إلى تحسين كفاءة العمل في المطبعة من خلال توفير الوقت والجهد للموظفين</p>
        <p>مما يضمن إنتاجًا عالي الجودة بأعلى مستويات الدقة والكفاءة</p>
    </div>

    <script src="@Url.Content("~/js/Admin/adminHome.js")"></script>

</body>
</html>

<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/8.0.7/signalr.min.js"
        integrity="sha512-7SRCYIJtR6F8ocwW7UxW6wGKqbSyqREDbfCORCbGLatU0iugBLwyOXpzhkPyHIFdBO0K2VCu57fvP2Twgx1o2A=="
        crossorigin="anonymous" referrerpolicy="no-referrer"></script>

<script>
    // Close the reorder messages div
    function closeReorderMessages() {
        var messageDiv = document.getElementById("reorderMessages");
        messageDiv.style.display = "none";
    }

    // Generic search function for any table
    function searchInventory(tableId) {
        var input, filter, table, tr, td, i, j, txtValue;
        input = document.getElementById("searchInput");
        filter = input.value.toUpperCase();
        table = document.getElementById(tableId);
        tr = table.getElementsByTagName("tr");

        // Loop through all table rows (skip the header row)
        for (i = 1; i < tr.length; i++) {
            tr[i].style.display = "none"; // Hide the row by default
            td = tr[i].getElementsByTagName("td");

            // Loop through all columns in the current row
            for (j = 0; j < td.length; j++) {
                if (td[j]) {
                    txtValue = td[j].textContent || td[j].innerText;
                    if (txtValue.toUpperCase().indexOf(filter) > -1) {
                        tr[i].style.display = ""; // Show the row if a match is found
                        break; // Exit the inner loop if a match is found
                    }
                }
            }
        }
    }

    // Generic SignalR connection setup
    function setupSignalR(inventoryType, methodName, messageEventName) {
        // Create the connection to the SignalR hub
        var hub = new signalR.HubConnectionBuilder()
            .withUrl("/InventoryReorderPoint")
            .build();

        hub.start()
            .then(function () {
                console.log(`${inventoryType} SignalR connection established.`);

                // Invoke the server-side method to check reorder points.
                hub.invoke(methodName)
                    .catch(function (err) {
                        console.error(`Error invoking ${methodName}: `, err.toString());
                    });
            })
            .catch(function (err) {
                console.error(`SignalR connection error: `, err.toString());
            });

        // Listen for reorder messages from the hub.
        hub.on(messageEventName, function (message) {
            console.log(`Received reorder message for ${inventoryType}: `, message);
            var messageDiv = document.getElementById("reorderMessages");
            // Make sure the message div is visible
            messageDiv.style.display = "block";
            // Append the new message rather than replacing previous ones
            messageDiv.innerHTML += "<div>" + message + "</div>";
        });
    }

    // Setup SignalR for Paper, Ink, and Supply
    setupSignalR("Paper", "CheckPaperReorderPoint", "ReceiveReorderMessagePaper");
    setupSignalR("Ink", "CheckInkReorderPoint", "ReceiveReorderMessageInk");
    setupSignalR("Supply", "CheckSupplyReorderPoint", "ReceiveReorderMessageSupply");
</script>