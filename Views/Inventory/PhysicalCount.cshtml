@{
    Layout = "~/Views/Shared/MinimalLayout.cshtml";
    ViewData["Title"] = "تعديل المخزون";
}
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@{

    int jobRole = HttpContextAccessor.HttpContext.Session.GetInt32("JobRole") ?? 0;
    Console.WriteLine("JobRole: " + jobRole);
}
<head>
    <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
    <link href="~/css/Inventory/PhysicalCount.css" rel="stylesheet" />

</head>

<div class="arrow">
    @{
        // admin
        if (jobRole == 0)
        {
            <a asp-controller="employee" asp-action="adminhome" class="back">
                <i class='bx bx-left-arrow-circle' style="font-size: 40px; color: white;"></i>
            </a>

        } // inventory manager
        else if (jobRole == 1)
        {
            <a asp-controller="employee" asp-action="inventoryManager" class="back">
                <i class='bx bx-left-arrow-circle' style="font-size: 40px; color: white;"></i>
            </a>
        }
        else if (jobRole == 2)
        {
            <a asp-controller="employee" asp-action="inventoryClerk" class="back">
                <i class='bx bx-left-arrow-circle' style="font-size: 40px; color: white;"></i>
            </a>
        }


    }
</div>

<div class="container">



    <h1> تعديل المخزون</h1>

    <div class="card-body">
        @if (TempData["Success"] != null)
        {
            <div class="success-message">
                <i class="bx bx-check-circle"></i> @TempData["Success"]
            </div>
        }
        @if (TempData["Error"] != null)
        {
            <div class="error-message">
                <i class="bx bx-error-circle"></i> @TempData["Error"]
            </div>
        }


        <form method="post" asp-action="physicalCount">
            <div class="rowCont">
                <div class="colCont">
                    <label class="form-label">الكمية الحالية</label>
                    <input type="text" id="currentQuantity" class="form-control" readonly value="0" />
                    <span class="error-message" id="currentQuantityError" style="color: red; display: none;">يرجى اختيار العنصر أولاً</span>
                </div>
                <div class="colCont">
                    <label class="form-label">العنصر</label>
                    <select id="itemId" name="itemId" class="form-select" required disabled>
                        <option value="">-- اختر نوع العنصر أولا --</option>
                    </select>
                    <span class="error-message" id="itemIdError" style="color: red; display: none;">يرجى اختيار العنصر</span>
                </div>
                <div class="colCont">
                    <label class="form-label">نوع العنصر</label>
                    <select id="inventoryType" name="itemType" class="form-select">
                        <option value="">-- اختر نوع العنصر --</option>
                        <option value="Paper">ورق</option>
                        <option value="Ink">حبر</option>
                        <option value="Supply">مستلزمات</option>
                    </select>
                    <span class="error-message" id="inventoryTypeError" style="color: red; display: none;">يرجى اختيار نوع العنصر</span>
                </div>




            </div>

            <div class="rowCont">
                <div class="colCont"> 
                     <label class="form-label">تاريخ الجرد</label> 
                     <input type="date" name="physicalCountDate" class="form-control" value="@DateTime.Now.ToString("yyyy-MM-dd")" disabled/> 
                     <span class="error-message" id="physicalCountDateError" style="color: red; display: none;">يرجى اختيار تاريخ الجرد</span> 
                </div> 

                <div class="colCont">
                    <label class="form-label">الكمية الجديدة</label>
                    <input type="number" name="newQuantity" class="form-control" min="0"  />
                    <span class="error-message" id="newQuantityError" style="color: red; display: none;">يرجى إدخال الكمية الجديدة</span>
                </div>


            </div>

            <div class="notes">
                <label class="form-label">ملاحظات الجرد</label>
                <textarea name="notes" class="form-control" rows="4" cols="80" placeholder="أدخل أي ملاحظات هنا..."></textarea>
            </div>

            <input type="hidden" name="employeeId" value="@ViewBag.EmployeeId" />

            <button type="submit" class="btn">حفظ التعديل</button>
        </form>
    </div>
</div>
@section Scripts {
    <script>
               document.addEventListener("DOMContentLoaded", function () {
            const form = document.querySelector("form");
            const inventoryType = document.getElementById("inventoryType");
            const itemId = document.getElementById("itemId");
            const newQuantity = document.querySelector("input[name='newQuantity']");
            const physicalCountDate = document.querySelector("input[name='physicalCountDate']");

            form.addEventListener("submit", function (event) {
                let isValid = true;

                function showError(elementId) {
                    document.getElementById(elementId).style.display = "block";
                    isValid = false;
                }

                function hideError(elementId) {
                    document.getElementById(elementId).style.display = "none";
                }

                if (!inventoryType.value) {
                    showError("inventoryTypeError");
                } else {
                    hideError("inventoryTypeError");
                }

                if (!itemId.value) {
                    showError("itemIdError");
                } else {
                    hideError("itemIdError");
                }

                if (!newQuantity.value || newQuantity.value < 0) {
                    showError("newQuantityError");
                } else {
                    hideError("newQuantityError");
                }

                if (!physicalCountDate.value) {
                    showError("physicalCountDateError");
                } else {
                    hideError("physicalCountDateError");
                }

                if (!isValid) {
                    event.preventDefault();
                }
            });
        });


        $(document).ready(function () {

            $('#inventoryType').change(function () {
                var selectedType = $(this).val();
                var itemSelect = $('#itemId');

                itemSelect.empty().prop('disabled', !selectedType);
                $('#currentQuantity').val('0');

                if (!selectedType) {
                    itemSelect.append('<option value="">-- اختر نوع العنصر أولا --</option>');
                    return;
                }

                itemSelect.append('<option value="">-- اختر --</option>');
                var items = {
                    Paper: @Html.Raw(Json.Serialize(ViewBag.PaperList)),
                    Ink: @Html.Raw(Json.Serialize(ViewBag.InkList)),
                    Supply: @Html.Raw(Json.Serialize(ViewBag.SupplyList))
                };

                // Corrected the template literal syntax
                items[selectedType].forEach(function(item) {
                    var id = item.paperId || item.inkId || item.suppliesId;
                    var name = item.name;
                    itemSelect.append($('<option></option>').val(id).text(name));
                });
            });

            $('#itemId').change(function () {
                var itemId = $(this).val();
                var itemType = $('#inventoryType').val();

                if (itemId && itemType) {
                    $.ajax({
                        url: '/Inventory/GetCurrentQuantity',
                        type: 'GET',
                        data: { itemType: itemType, itemId: itemId },
                        success: function (data) {
                            console.log("الكمية المسترجعة: ", data.currentQuantity);
                            $('#currentQuantity').val(data.currentQuantity);
                        },
                        error: function () {
                            console.log("فشل في جلب البيانات");
                            $('#currentQuantity').val('0');
                        }
                    });
                } else {
                    $('#currentQuantity').val('0');
                }
            });
        });
    </script>
}