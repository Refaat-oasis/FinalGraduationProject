@* @model ThothSystemVersion1.ViewModels.RequisitionCreateVM *@



@* <head> *@
@*     <meta charset="UTF-8" /> *@
@*     <meta name="viewport" content="width=device-width, initial-scale=1.0" /> *@
@*     <link rel="stylesheet" href="LogIn.css" /> *@
@*     <script src="https://cdn.tailwindcss.com"></script> *@
@*     <link rel="icon" type="image/x-icon" href="./photos/eye.jpg" /> *@
@*     <link rel="preconnect" href="https://fonts.googleapis.com" /> *@
@*     <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin /> *@
@*     <link href="https://fonts.googleapis.com/css2?family=Alexandria:wght@100..900&display=swap" rel="stylesheet" /> *@
@*     <link href="https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css" rel="stylesheet" /> *@
@*     <title>ThoTh</title> *@
@*     <link href="~/css/Technical/Create.css" rel="stylesheet" /> *@
@* </head> *@


@* <form asp-action="CreateRequisite" id="myform" class="form-container"> *@
@*     <h1>إنشاء أمر صرف جديد</h1> *@

@*     <div class="arrow"> *@
@*         <a asp-controller="Admin" asp-action="AdminHome" class="back"> *@
@*             <i class='bx bx-left-arrow-circle' style="font-size: 40px; color: white;"></i> *@
@*         </a> *@
@*     </div> *@

@*     <div class="inputBox"> *@
@*         <label asp-for="RequisiteOrderDTO.EmployeeId" class="textlabel">الرقم القومي للموظف</label> *@
@*         <input asp-for="RequisiteOrderDTO.EmployeeId" class="place" /> *@
@*         <span asp-validation-for="RequisiteOrderDTO.EmployeeId" class="text-danger"></span> *@
@*         <span class="error"></span> *@
@*     </div> *@

@*     <div class="inputBox"> *@
@*         <label asp-for="RequisiteOrderDTO.JobOrderId" class="textlabel">اختر الطلبيّة</label> *@
@*         <select asp-for="RequisiteOrderDTO.JobOrderId" class="place"> *@
@*             <option value=""></option> *@
@*             @foreach (var job in Model.JobOrders) *@
@*             { *@
@*                 <option value="@job.JobOrderId"> *@
@*                     @job.JobOrderId - @(job.Customer?.CustomerName ?? "بدون عميل") *@
@*                     @if (job.StartDate.HasValue) *@
@*                     { *@
@*                         <text> (تاريخ البدء: @job.StartDate.Value.ToShortDateString())</text> *@
@*                     } *@
@*                 </option> *@
@*             } *@
@*         </select> *@
@*         <span asp-validation-for="RequisiteOrderDTO.JobOrderId" class="text-danger"></span> *@
@*         <span class="error"></span> *@
@*     </div> *@

@*     <div class="inputBox"> *@
@*         <label asp-for="RequisiteOrderDTO.RequisiteNotes" class="textlabel">إضافة ملاحظات</label> *@
@*         <textarea asp-for="RequisiteOrderDTO.RequisiteNotes" class="place"></textarea> *@
@*         <span class="error"></span> *@
@*     </div> *@

@*     <h2>الأصناف المطلوبة</h2> *@
@*     <div id="itemsContainer"> *@
@*         <!-- سيتم إضافة الأصناف هنا عبر JavaScript --> *@
@*     </div> *@

@*     <div class="button-container"> *@
@*         <button type="button" id="addItemBtn" class="btn btn-primary">إضافة صنف</button> *@
@*         <button type="submit" class="btn btn-secondary">حفظ الطلب</button> *@
@*     </div> *@
@* </form> *@

@* @section Scripts { *@
@*     <script> *@
@*         $(document).ready(function() { *@
@*             // إضافة صنف جديد *@
@*             $('#addItemBtn').click(function() { *@
@*                 var index = $('#itemsContainer .item-row').length; *@
@*                 var html = ` *@
@*                     <div class="item-row border p-3 mb-3"> *@
@*                         <div class="row"> *@
@*                             <div class="col-md-4"> *@
@*                                 <label for="itemType_${index}" class="textlabel">اختر النوع</label> *@
@*                                 <select name="RequisiteOrderDTO.Items[${index}].Type" class="form-control item-type"> *@
@*                                     <option value="">اختر النوع</option> *@
@*                                     <option value="Paper">ورق</option> *@
@*                                     <option value="Ink">حبر</option> *@
@*                                     <option value="Supply">مستلزمات</option> *@
@*                                 </select> *@
@*                                  <span class="error"></span> *@
@*                             </div> *@

@*                             <div class="col-md-4"> *@
@*                                 <label for="itemType_${index}" class="textlabel"> اختر الصنف</label> *@
@*                                 <select name="RequisiteOrderDTO.Items[${index}].ItemId" class="form-control item-id"> *@
@*                                     <option value="">اختر الصنف </option> *@
@*                                 </select> *@
@*                                  <span class="error"></span> *@
@*                             </div> *@

@*                             <div class="col-md-3"> *@
@*                             <label class="textlabel">الكمية</label> *@
@*                                 <input type="number" name="RequisiteOrderDTO.Items[${index}].Quantity" class="form-control" min="1" /> *@
@*                                  <span class="error"></span> *@
@*                             </div> *@


@*                             <div class="col-md-1"> *@
@*                                 <button type="button" class="btn btn-secondary remove-item">إلغاء</button> *@
@*                             </div> *@
@*                         </div> *@
@*                     </div> *@
@*                 `; *@
@*                 $('#itemsContainer').append(html); *@
@*             }); *@

@*             // حذف صنف *@
@*             $(document).on('click', '.remove-item', function() { *@
@*                 $(this).closest('.item-row').remove(); *@
@*             }); *@

@*             // تحديث الأصناف عند تغيير النوع *@
@*             $(document).on('change', '.item-type', function() { *@
@*                 var type = $(this).val(); *@
@*                 var itemSelect = $(this).closest('.item-row').find('.item-id'); *@

@*                 itemSelect.empty().append('<option value="">-- اختر الصنف --</option>'); *@

@*                 if (type === "Paper") { *@
@*         @foreach (var paper in Model.AvailablePapers) *@
@*         { *@
@*             <text> *@
@*                                     itemSelect.append('<option value="@paper.PaperId">@paper.Name</option>'); *@
@*             </text> *@
@*         } *@
@*                 } *@
@*                 else if (type === "Ink") { *@
@*         @foreach (var ink in Model.AvailableInks) *@
@*         { *@
@*             <text> *@
@*                                     itemSelect.append('<option value="@ink.InkId">@ink.Name</option>'); *@
@*             </text> *@
@*         } *@
@*                 } *@
@*                 else if (type === "Supply") { *@
@*         @foreach (var supply in Model.AvailableSupplies) *@
@*         { *@
@*             <text> *@
@*                                     itemSelect.append('<option value="@supply.SuppliesId">@supply.Name</option>'); *@
@*             </text> *@
@*         } *@
@*                 } *@
@*             }); *@
@*         }); *@


@*         const setError = (input, errorMsg) => { *@
@*             const parent = input.parentElement; *@
@*             let errorSpan = parent.querySelector(".error"); *@

@*             if (!errorSpan) { *@
@*                 errorSpan = document.createElement("span"); *@
@*                 errorSpan.classList.add("error"); *@
@*                 parent.appendChild(errorSpan); *@
@*             } *@

@*             errorSpan.innerText = errorMsg; *@
@*             errorSpan.style.color = "red"; *@
@*             input.classList.add("error"); *@
@*         }; *@

@*         const setSuccess = (input) => { *@
@*             const parent = input.parentElement; *@
@*             let errorSpan = parent.querySelector(".error"); *@

@*             if (errorSpan) { *@
@*                 errorSpan.innerText = ""; *@
@*             } *@

@*             input.classList.remove("error"); *@
@*             input.classList.add("success"); *@
@*         }; *@

@*         function validateForm() { *@
@*             let isValid = true; *@

@*             // التحقق من إدخال الرقم القومي للموظف *@
@*             let employeeIdInput = document.querySelector('input[name="RequisiteOrderDTO.EmployeeId"]'); *@
@*             if (employeeIdInput.value.trim() === "") { *@
@*                 setError(employeeIdInput, "برجاء إدخال الرقم القومي للموظف"); *@
@*                 isValid = false; *@
@*             } else { *@
@*                 setSuccess(employeeIdInput); *@
@*             } *@

@*             // التحقق من اختيار الطلبيّة *@
@*             let jobOrderSelect = document.querySelector('select[name="RequisiteOrderDTO.JobOrderId"]'); *@
@*             if (!jobOrderSelect.value) { *@
@*                 setError(jobOrderSelect, "برجاء اختيار الطلبيّة"); *@
@*                 isValid = false; *@
@*             } else { *@
@*                 setSuccess(jobOrderSelect); *@
@*             } *@

@*             // التحقق من إدخال الأصناف بشكل صحيح *@
@*             document.querySelectorAll('.item-row').forEach((row) => { *@
@*                 let itemTypeSelect = row.querySelector('.item-type'); *@
@*                 let itemIdSelect = row.querySelector('.item-id'); *@
@*                 let quantityInput = row.querySelector('input[type="number"]'); *@

@*                 if (!itemTypeSelect.value) { *@
@*                     setError(itemTypeSelect, "برجاء اختيار النوع"); *@
@*                     isValid = false; *@
@*                 } else { *@
@*                     setSuccess(itemTypeSelect); *@
@*                 } *@

@*                 if (!itemIdSelect.value) { *@
@*                     setError(itemIdSelect, "برجاء اختيار الصنف"); *@
@*                     isValid = false; *@
@*                 } else { *@
@*                     setSuccess(itemIdSelect); *@
@*                 } *@

@*                 if (!quantityInput.value || quantityInput.value <= 0) { *@
@*                     setError(quantityInput, "يجب أن تكون الكمية أكبر من الصفر"); *@
@*                     isValid = false; *@
@*                 } else { *@
@*                     setSuccess(quantityInput); *@
@*                 } *@
@*             }); *@

@*             return isValid; *@
@*         } *@

@*         document.getElementById("myform").addEventListener("submit", function (e) { *@
@*             if (!validateForm()) { *@
@*                 e.preventDefault(); // منع الإرسال إذا لم تكن القيم صحيحة *@
@*             } *@
@*         }); *@
@*     </script> *@




@* } *@

@model ThothSystemVersion1.ViewModels.RequisitionCreateVM

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="LogIn.css" />
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="icon" type="image/x-icon" href="./photos/eye.jpg" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Alexandria:wght@100..900&display=swap" rel="stylesheet" />
    <link href="https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css" rel="stylesheet" />
    <title>ThoTh</title>
    <link href="~/css/Technical/Create.css" rel="stylesheet" />
</head>

<div class="container mt-4">
    <div class="card shadow">
        <div class="card-header bg-primary text-white text-center">
            <h4>إنشاء أمر صرف جديد</h4>
        </div>
        <div class="card-body">
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success">
                    <i class="bx bx-check-circle"></i> @TempData["SuccessMessage"]
                </div>
            }
            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger">
                    <i class="bx bx-error-circle"></i> @TempData["ErrorMessage"]
                </div>
            }

            <form asp-action="CreateRequisite" asp-controller="Technical" id="myform" class="form-container" method="post">
                <div class="arrow mb-3">
                    <a asp-controller="Admin" asp-action="AdminHome" class="back">
                        <i class='bx bx-left-arrow-circle' style="font-size: 40px; color: #0d6efd;"></i>
                    </a>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <label asp-for="RequisiteOrderDTO.JobOrderId" class="form-label fw-bold">اختر الطلبيّة</label>
                        <select asp-for="RequisiteOrderDTO.JobOrderId" class="form-select">
                            <option value="">-- اختر الطلبية --</option>
                            @foreach (var job in Model.JobOrders)
                            {
                                <option value="@job.JobOrderId">
                                    @job.JobOrderId - @(job.Customer?.CustomerName ?? "بدون عميل")
                                    @if (job.StartDate.HasValue)
                                    {
                                        <text> (تاريخ البدء: @job.StartDate.Value.ToShortDateString())</text>
                                    }
                                </option>
                            }
                        </select>
                        <span asp-validation-for="RequisiteOrderDTO.JobOrderId" class="text-danger"></span>
                    </div>
                </div>

                <div class="row mt-3">
                    <div class="col-12">
                        <label asp-for="RequisiteOrderDTO.RequisiteNotes" class="form-label fw-bold">إضافة ملاحظات</label>
                        <textarea asp-for="RequisiteOrderDTO.RequisiteNotes" class="form-control" rows="2"></textarea>
                    </div>
                </div>

                <div class="card mt-4 border-primary shadow-sm">
                    <div class="card-header bg-light">
                        <h5 class="mb-0">إضافة صنف</h5>
                    </div>
                    <div class="card-body">
                        <div class="row g-3">
                            <div class="col-md-4">
                                <label class="form-label fw-bold">نوع الصنف</label>
                                <select id="itemType" class="form-select">
                                    <option value="">-- اختر النوع --</option>
                                    <option value="Paper">ورق</option>
                                    <option value="Ink">حبر</option>
                                    <option value="Supply">مستلزمات</option>
                                </select>
                            </div>

                            <div class="col-md-4">
                                <label class="form-label fw-bold">الصنف</label>
                                <select id="itemId" class="form-select" disabled>
                                    <option value="">-- اختر الصنف --</option>
                                </select>
                            </div>

                            <div class="col-md-3">
                                <label class="form-label fw-bold">الكمية</label>
                                <input type="number" id="itemQuantity" class="form-control" min="1" />
                            </div>

                            <div class="col-md-1 d-grid">
                                <button type="button" id="addItem" class="btn btn-primary mt-4">إضافة</button>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="table-responsive mt-4">
                    <table class="table table-bordered table-hover text-center">
                        <thead class="table-primary">
                            <tr>
                                <th>الصنف</th>
                                <th>الكمية</th>
                                <th>الإجراءات</th>
                            </tr>
                        </thead>
                        <tbody id="itemsTableBody">
                            <!-- Dynamic rows will be added here -->
                        </tbody>
                    </table>
                </div>

                <div id="hiddenItemsContainer"></div>

                <div class="d-grid mt-3">
                    <button type="submit" class="btn btn-success btn-lg">حفظ الطلب</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            var items = [];
            var editIndex = -1;

            const dataSources = {
                Paper: @Html.Raw(Json.Serialize(Model.AvailablePapers)),
                Ink: @Html.Raw(Json.Serialize(Model.AvailableInks)),
                Supply: @Html.Raw(Json.Serialize(Model.AvailableSupplies))
            };

            $('#itemType').change(function () {
                var selectedType = $(this).val();
                var $itemSelect = $('#itemId');
                $itemSelect.empty().prop('disabled', !selectedType);

                $itemSelect.append('<option value="">-- اختر --</option>');
                if (!selectedType) return;

                dataSources[selectedType]?.forEach(item => {
                    const id = item.paperId || item.inkId || item.suppliesId;
                    const name = item.name;
                    $itemSelect.append(`<option value="${id}">${name}</option>`);
                });
            });

            function renderItems() {
                var $tableBody = $('#itemsTableBody');
                var $hiddenContainer = $('#hiddenItemsContainer');
                $tableBody.empty();
                $hiddenContainer.empty();

                items.forEach((item, index) => {
                    $tableBody.append(`
                        <tr data-index="${index}">
                            <td>${item.itemName}</td>
                            <td>${item.quantity}</td>
                            <td>
                                <button type="button" class="btn btn-warning btn-sm editItem">تعديل</button>
                                <button type="button" class="btn btn-danger btn-sm deleteItem">حذف</button>
                            </td>
                        </tr>
                    `);

                    let hidden = "";
                    if (item.itemType === "Paper")
                        hidden += `<input type="hidden" name="RequisiteOrderDTO.Items[${index}].ItemId" value="${item.itemId}" />`;
                    else if (item.itemType === "Ink")
                        hidden += `<input type="hidden" name="RequisiteOrderDTO.Items[${index}].ItemId" value="${item.itemId}" />`;
                    else if (item.itemType === "Supply")
                        hidden += `<input type="hidden" name="RequisiteOrderDTO.Items[${index}].ItemId" value="${item.itemId}" />`;

                    hidden += `<input type="hidden" name="RequisiteOrderDTO.Items[${index}].Type" value="${item.itemType}" />`;
                    hidden += `<input type="hidden" name="RequisiteOrderDTO.Items[${index}].Quantity" value="${item.quantity}" />`;

                    $hiddenContainer.append(hidden);
                });
            }

            $('#addItem').click(function () {
                var itemType = $('#itemType').val();
                var itemId = $('#itemId').val();
                var itemName = $('#itemId option:selected').text();
                var quantity = $('#itemQuantity').val();

                if (!itemType || !itemId || !quantity || quantity <= 0) {
                    alert("يرجى تعبئة جميع الحقول بشكل صحيح");
                    return;
                }

                var newItem = { itemType, itemId, itemName, quantity };

                if (editIndex === -1) {
                    items.push(newItem);
                } else {
                    items[editIndex] = newItem;
                    editIndex = -1;
                    $('#addItem').text('إضافة');
                }

                $('#itemType').val('');
                $('#itemId').empty().append('<option value="">-- اختر الصنف --</option>').prop('disabled', true);
                $('#itemQuantity').val('');

                renderItems();
            });

            $('#itemsTableBody').on('click', '.editItem', function () {
                editIndex = $(this).closest('tr').data('index');
                var item = items[editIndex];

                $('#itemType').val(item.itemType).trigger('change');
                setTimeout(() => $('#itemId').val(item.itemId), 100);
                $('#itemQuantity').val(item.quantity);
                $('#addItem').text('تحديث');
            });

            $('#itemsTableBody').on('click', '.deleteItem', function () {
                items.splice($(this).closest('tr').data('index'), 1);
                renderItems();
            });

            $('#myform').submit(function (e) {
                if (items.length === 0) {
                    alert("يجب إضافة صنف واحد على الأقل قبل حفظ الطلب");
                    e.preventDefault();
                    return;
                }

                // Validate employee ID
                if ($('#RequisiteOrderDTO_EmployeeId').val().trim() === '') {
                    alert("برجاء إدخال الرقم القومي للموظف");
                    e.preventDefault();
                    return;
                }

                // Validate job order selection
                if ($('#RequisiteOrderDTO_JobOrderId').val() === '') {
                    alert("برجاء اختيار الطلبية");
                    e.preventDefault();
                    return;
                }
            });

        @if (TempData["SuccessMessage"] != null)
        {
            <text>
                            setTimeout(function () {
                                window.location.href = '@Url.Action("CreateRequisite")';
                            }, 3000);
            </text>
        }
        });
    </script>
}







