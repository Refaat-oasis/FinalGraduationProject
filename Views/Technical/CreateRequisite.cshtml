@* @model ThothSystemVersion1.DataTransfereObject.RequisiteOrderDTO *@

@* <head> *@
@*     <meta charset="UTF-8" /> *@
@*     <meta name="viewport" content="width=device-width, initial-scale=1.0" /> *@
@*     <link rel="stylesheet" href="LogIn.css" /> *@
@*     <script src="https://cdn.tailwindcss.com"></script> *@
@*     <link rel="icon" type="image/x-icon" href="./photos/eye.jpg" /> *@
@*     <link rel="preconnect" href="https://fonts.googleapis.com" /> *@
@*     <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin /> *@
@*     <link href="https://fonts.googleapis.com/css2?family=Alexandria:wght@100..900&display=swap" rel="stylesheet" /> *@
@*     <link href="https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css" rel="stylesheet" /> *@
@*     <title>ThoTh</title> *@
@*     <link href="~/css/Technical/Create.css" rel="stylesheet" /> *@
@* </head> *@

@* <div class="container mt-4"> *@
@*     <div class="card shadow"> *@
@*         <div class="card-header bg-primary text-white text-center"> *@
@*             <h4>إنشاء أمر صرف جديد</h4> *@
@*         </div> *@
@*         <div class="card-body"> *@
@*             @if (TempData["SuccessMessage"] != null) *@
@*             { *@
@*                 <div class="alert alert-success"> *@
@*                     <i class="bx bx-check-circle"></i> @TempData["SuccessMessage"] *@
@*                 </div> *@
@*             } *@
@*             @if (TempData["ErrorMessage"] != null) *@
@*             { *@
@*                 <div class="alert alert-danger"> *@
@*                     <i class="bx bx-error-circle"></i> @TempData["ErrorMessage"] *@
@*                 </div> *@
@*             } *@

@*             <form asp-action="CreateRequisite" asp-controller="Technical" id="myform" class="form-container" method="post"> *@
@*                 <div class="arrow mb-3"> *@
@*                     <a asp-controller="Admin" asp-action="AdminHome" class="back"> *@
@*                         <i class='bx bx-left-arrow-circle' style="font-size: 40px; color: #0d6efd;"></i> *@
@*                     </a> *@
@*                 </div> *@

@*                 <div class="row mb-3"> *@
@*                     <div class="col-md-6"> *@
@*                         <label asp-for="JobOrderId" class="form-label fw-bold">اختر الطلبيّة</label> *@
@*                         <select asp-for="JobOrderId" class="form-select"> *@
@*                             <option value="">-- اختر الطلبية --</option> *@
@*                             @foreach (var job in ViewBag.JobOrderList) *@
@*                             { *@
@*                                 <option value="@job.JobOrderId"> *@
@*                                     @job.JobOrderId - @(job.Customer?.CustomerName ?? "بدون عميل") *@

@*                                 </option> *@
@*                             } *@
@*                         </select> *@
@*                         <span asp-validation-for="JobOrderId" class="text-danger"></span> *@
@*                     </div> *@
@*                 </div> *@

@*                 <div class="row mb-3"> *@
@*                     <div class="col-12"> *@
@*                         <label asp-for="RequisiteNotes" class="form-label fw-bold">إضافة ملاحظات</label> *@
@*                         <textarea asp-for="RequisiteNotes" class="form-control" rows="2"></textarea> *@
@*                     </div> *@
@*                 </div> *@

@*                 <div class="card mt-4 border-primary shadow-sm"> *@
@*                     <div class="card-header bg-light"> *@
@*                         <h5 class="mb-0">إضافة صنف</h5> *@
@*                     </div> *@
@*                     <div class="card-body"> *@
@*                         <div class="row g-3"> *@
@*                             <div class="col-md-4"> *@
@*                                 <label class="form-label fw-bold">نوع الصنف</label> *@
@*                                 <select id="itemType" class="form-select"> *@
@*                                     <option value="">-- اختر النوع --</option> *@
@*                                     <option value="Paper">ورق</option> *@
@*                                     <option value="Ink">حبر</option> *@
@*                                     <option value="Supply">مستلزمات</option> *@
@*                                 </select> *@
@*                             </div> *@

@*                             <div class="col-md-4"> *@
@*                                 <label class="form-label fw-bold">الصنف</label> *@
@*                                 <select id="itemId" class="form-select" disabled> *@
@*                                     <option value="">-- اختر الصنف --</option> *@
@*                                 </select> *@
@*                             </div> *@
@*                             <div class="colCont"> *@
@*                                 <label class="form-label">الكمية الحالية</label> *@
@*                                 <input type="text" id="currentQuantity" class="form-control" readonly value="0" /> *@
@*                                 <span class="error-message" id="currentQuantityError" style="color: red; display: none;">يرجى اختيار العنصر أولاً</span> *@
@*                             </div> *@
@*                             <div class="col-md-3"> *@
@*                                 <label class="form-label fw-bold">الكمية</label> *@
@*                                 <input type="number" id="itemQuantity" class="form-control" min="1" /> *@
@*                             </div> *@

@*                             <div class="col-md-1 d-grid"> *@
@*                                 <button type="button" id="addItem" class="btn btn-primary mt-4">إضافة</button> *@
@*                             </div> *@
@*                         </div> *@
@*                     </div> *@
@*                 </div> *@

@*                 <div class="table-responsive mt-4"> *@
@*                     <table class="table table-bordered table-hover text-center"> *@
@*                         <thead class="table-primary"> *@
@*                             <tr> *@
@*                                 <th>الصنف</th> *@
@*                                 <th>الكمية</th> *@
@*                                 <th>الإجراءات</th> *@
@*                             </tr> *@
@*                         </thead> *@
@*                         <tbody id="itemsTableBody"> *@
@*                             <!-- Dynamic rows will be added here --> *@
@*                         </tbody> *@
@*                     </table> *@
@*                 </div> *@

@*                 <!-- Hidden inputs for BridgeList --> *@
@*                 <div id="hiddenItemsContainer"></div> *@

@*                 <div class="d-grid mt-3"> *@
@*                     <button type="submit" class="btn btn-success btn-lg">حفظ الطلب</button> *@
@*                 </div> *@
@*             </form> *@
@*         </div> *@
@*     </div> *@
@* </div> *@

@* @section Scripts { *@
@*     <script> *@
@*         $(document).ready(function () { *@
@*             var items = []; *@
@*             var editIndex = -1; *@

@*             // Use ViewBag data for JavaScript *@
@*             const dataSources = { *@
@*                 Paper: @Html.Raw(Json.Serialize(ViewBag.PaperList)), *@
@*                 Ink: @Html.Raw(Json.Serialize(ViewBag.InkList)), *@
@*                 Supply: @Html.Raw(Json.Serialize(ViewBag.SupplyList)) *@
@*             }; *@

@*             $('#itemType').change(function () { *@
@*                 var selectedType = $(this).val(); *@
@*                 var $itemSelect = $('#itemId'); *@
@*                 $itemSelect.empty().prop('disabled', !selectedType); *@

@*                 $itemSelect.append('<option value="">-- اختر --</option>'); *@
@*                 if (!selectedType) return; *@

@*                 dataSources[selectedType]?.forEach(item => { *@
@*                     const id = item.paperId || item.inkId || item.suppliesId; *@
@*                     const name = item.name; *@
@*                     $itemSelect.append(`<option value="${id}">${name}</option>`); *@
@*                 }); *@
@*             }); *@
@*              $('#inventoryType').change(function () { *@
@*                 var selectedType = $(this).val(); *@
@*                 var itemSelect = $('#itemId'); *@

@*                 itemSelect.empty().prop('disabled', !selectedType); *@
@*                 $('#currentQuantity').val('0'); *@

@*                 if (!selectedType) { *@
@*                     itemSelect.append('<option value="">-- اختر نوع العنصر أولا --</option>'); *@
@*                     return; *@
@*                 } *@

@*                 itemSelect.append('<option value="">-- اختر --</option>'); *@
@*                 var items = { *@
@*                     Paper: @Html.Raw(Json.Serialize(ViewBag.PaperList)), *@
@*                     Ink: @Html.Raw(Json.Serialize(ViewBag.InkList)), *@
@*                     Supply: @Html.Raw(Json.Serialize(ViewBag.SupplyList)) *@
@*                 }; *@
@*             function renderItems() { *@
@*                 var $tableBody = $('#itemsTableBody'); *@
@*                 var $hiddenContainer = $('#hiddenItemsContainer'); *@
@*                 $tableBody.empty(); *@
@*                 $hiddenContainer.empty(); *@

@*                 items.forEach((item, index) => { *@
@*                     $tableBody.append(` *@
@*                         <tr data-index="${index}"> *@
@*                             <td>${item.itemName}</td> *@
@*                             <td>${item.quantity}</td> *@
@*                             <td> *@
@*                                 <button type="button" class="btn btn-warning btn-sm editItem">تعديل</button> *@
@*                                 <button type="button" class="btn btn-danger btn-sm deleteItem">حذف</button> *@
@*                             </td> *@
@*                         </tr> *@
@*                     `); *@

@*                     let hidden = ""; *@
@*                     if (item.itemType === "Paper") *@
@*                         hidden += `<input type="hidden" name="BridgeList[${index}].PaperId" value="${item.itemId}" />`; *@
@*                     else if (item.itemType === "Ink") *@
@*                         hidden += `<input type="hidden" name="BridgeList[${index}].InkId" value="${item.itemId}" />`; *@
@*                     else if (item.itemType === "Supply") *@
@*                         hidden += `<input type="hidden" name="BridgeList[${index}].SuppliesId" value="${item.itemId}" />`; *@

@*                     hidden += `<input type="hidden" name="BridgeList[${index}].Quantity" value="${item.quantity}" />`; *@

@*                     $hiddenContainer.append(hidden); *@
@*                 }); *@
@*             } *@

@*             $('#addItem').click(function () { *@
@*                 var itemType = $('#itemType').val(); *@
@*                 var itemId = $('#itemId').val(); *@
@*                 var itemName = $('#itemId option:selected').text(); *@
@*                 var quantity = $('#itemQuantity').val(); *@

@*                 if (!itemType || !itemId || !quantity || quantity <= 0) { *@
@*                     alert("يرجى تعبئة جميع الحقول بشكل صحيح"); *@
@*                     return; *@
@*                 } *@

@*                 var newItem = { itemType, itemId, itemName, quantity }; *@

@*                 if (editIndex === -1) { *@
@*                     items.push(newItem); *@
@*                 } else { *@
@*                     items[editIndex] = newItem; *@
@*                     editIndex = -1; *@
@*                     $('#addItem').text('إضافة'); *@
@*                 } *@

@*                 $('#itemType').val(''); *@
@*                 $('#itemId').empty().append('<option value="">-- اختر الصنف --</option>').prop('disabled', true); *@
@*                 $('#itemQuantity').val(''); *@

@*                 renderItems(); *@
@*             }); *@

@*             $('#itemsTableBody').on('click', '.editItem', function () { *@
@*                 editIndex = $(this).closest('tr').data('index'); *@
@*                 var item = items[editIndex]; *@

@*                 $('#itemType').val(item.itemType).trigger('change'); *@
@*                 setTimeout(() => $('#itemId').val(item.itemId), 100); *@
@*                 $('#itemQuantity').val(item.quantity); *@
@*                 $('#addItem').text('تحديث'); *@
@*             }); *@

@*             $('#itemsTableBody').on('click', '.deleteItem', function () { *@
@*                 items.splice($(this).closest('tr').data('index'), 1); *@
@*                 renderItems(); *@
@*             }); *@

@*             $('#myform').submit(function (e) { *@
@*                 if (items.length === 0) { *@
@*                     alert("يجب إضافة صنف واحد على الأقل قبل حفظ الطلب"); *@
@*                     e.preventDefault(); *@
@*                     return; *@
@*                 } *@

@*                 if ($('#JobOrderId').val() === '') { *@
@*                     alert("برجاء اختيار الطلبية"); *@
@*                     e.preventDefault(); *@
@*                     return; *@
@*                 } *@
@*             }); *@

@*         @if (TempData["SuccessMessage"] != null) *@
@*         { *@
@*             <text> *@
@*                         setTimeout(function () { *@
@*                             window.location.href = '@Url.Action("CreateRequisite")'; *@
@*                         }, 3000); *@
@*             </text> *@
@*         } *@
@*         }); *@
@*     </script> *@
@* } *@

@model ThothSystemVersion1.DataTransfereObject.RequisiteOrderDTO

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="LogIn.css" />
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="icon" type="image/x-icon" href="./photos/eye.jpg" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Alexandria:wght@100..900&display=swap" rel="stylesheet" />
    <link href="https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css" rel="stylesheet" />
    <title>ThoTh</title>
    <link href="~/css/Technical/Create.css" rel="stylesheet" />
    <style>
        .is-invalid {
            border-color: #dc3545;
        }

        .error-message {
            color: #dc3545;
            font-size: 0.875rem;
            margin-top: 0.25rem;
        }

        .table th, .table td {
            vertical-align: middle;
        }
    </style>
</head>

<div class="container mt-4">
    <div class="card shadow">
        <div class="card-header bg-primary text-white text-center">
            <h4>إنشاء أمر صرف جديد</h4>
        </div>
        <div class="card-body">
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show">
                    <i class="bx bx-check-circle"></i> @TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }
            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show">
                    <i class="bx bx-error-circle"></i> @TempData["ErrorMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            <form asp-action="CreateRequisite" asp-controller="Technical" id="requisiteForm" method="post">
                <div class="arrow mb-3">
                    <a asp-controller="Admin" asp-action="AdminHome" class="back">
                        <i class='bx bx-left-arrow-circle' style="font-size: 40px; color: #0d6efd;"></i>
                    </a>
                </div>

                <div class="row mb-3">
                    <div class="col-md-6">
                        <label asp-for="JobOrderId" class="form-label fw-bold">اختر الطلبيّة</label>
                        <select asp-for="JobOrderId" class="form-select" required>
                            <option value="">-- اختر الطلبية --</option>
                            @foreach (var job in ViewBag.JobOrderList)
                            {
                                <option value="@job.JobOrderId">
                                    @job.JobOrderId - @(job.Customer?.CustomerName ?? "بدون عميل")
                                </option>
                            }
                        </select>
                        <span asp-validation-for="JobOrderId" class="text-danger"></span>
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-12">
                        <label asp-for="RequisiteNotes" class="form-label fw-bold">إضافة ملاحظات</label>
                        <textarea asp-for="RequisiteNotes" class="form-control" rows="2"></textarea>
                    </div>
                </div>

                <div class="card mt-4 border-primary shadow-sm">
                    <div class="card-header bg-light">
                        <h5 class="mb-0">إضافة صنف</h5>
                    </div>
                    <div class="card-body">
                        <div class="row g-3">
                            <div class="col-md-3">
                                <label class="form-label fw-bold">نوع الصنف</label>
                                <select id="itemType" class="form-select">
                                    <option value="">-- اختر النوع --</option>
                                    <option value="Paper">ورق</option>
                                    <option value="Ink">حبر</option>
                                    <option value="Supply">مستلزمات</option>
                                </select>
                            </div>

                            <div class="col-md-3">
                                <label class="form-label fw-bold">الصنف</label>
                                <select id="itemId" class="form-select" disabled>
                                    <option value="">-- اختر الصنف --</option>
                                </select>
                            </div>

                            <div class="col-md-2">
                                <label class="form-label fw-bold">الكمية الحالية</label>
                                <input type="number" id="currentQuantity" class="form-control" readonly />
                            </div>

                            <div class="col-md-2">
                                <label class="form-label fw-bold">الكمية المطلوبة</label>
                                <input type="number" id="itemQuantity" class="form-control" min="1" />
                                <div id="quantityError" class="error-message" style="display:none;">
                                    الكمية المطلوبة يجب أن تكون أقل من الكمية الحالية
                                </div>
                            </div>

                            <div class="col-md-2 d-grid">
                                <button type="button" id="addItemBtn" class="btn btn-primary mt-4">إضافة</button>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="table-responsive mt-4">
                    <table class="table table-bordered table-hover text-center">
                        <thead class="table-primary">
                            <tr>
                                <th>نوع الصنف</th>
                                <th>اسم الصنف</th>
                                <th>الكمية الحالية</th>
                                <th>الكمية المطلوبة</th>
                                <th>الإجراءات</th>
                            </tr>
                        </thead>
                        <tbody id="itemsTableBody">
                            <!-- Dynamic rows will be added here -->
                        </tbody>
                    </table>
                </div>

                <div id="hiddenItemsContainer"></div>

                <div class="d-grid mt-3">
                    <button type="submit" class="btn btn-success btn-lg">حفظ الطلب</button>
                </div>
            </form>
        </div>
    </div>
</div>


@section Scripts {
    <script>
        $(document).ready(function () {
            // Initialize variables
            var items = [];
            var editIndex = -1;

            // Data sources from ViewBag
            const dataSources = {
                Paper: @Html.Raw(Json.Serialize(ViewBag.PaperList)),
                Ink: @Html.Raw(Json.Serialize(ViewBag.InkList)),
                Supply: @Html.Raw(Json.Serialize(ViewBag.SupplyList))
            };

            // When item type changes
            $('#itemType').change(function () {
                var selectedType = $(this).val();
                var $itemSelect = $('#itemId');

                // Reset fields
                $itemSelect.empty().prop('disabled', !selectedType);
                $('#currentQuantity').val('');
                $('#itemQuantity').val('');
                $('#quantityError').hide();

                if (!selectedType) {
                    $itemSelect.append('<option value="">-- اختر الصنف --</option>');
                    return;
                }

                // Populate items based on selected type
                $itemSelect.append('<option value="">-- اختر الصنف --</option>');

                if (dataSources[selectedType] && dataSources[selectedType].length > 0) {
                    $.each(dataSources[selectedType], function(index, item) {
                        var id = item.paperId || item.inkId || item.suppliesId;
                        var name = item.name;
                        var quantity = item.quantity || 0;

                        $itemSelect.append($('<option>', {
                            value: id,
                            text: name,
                            'data-quantity': quantity
                        }));
                    });
                }
            });

            // When item selection changes
            $('#itemId').change(function () {
                var selectedOption = $(this).find('option:selected');
                var currentQty = selectedOption.data('quantity') || 0;
                $('#currentQuantity').val(currentQty);
                $('#itemQuantity').attr('max', currentQty);
            });

            // Quantity validation
            $('#itemQuantity').on('input', function() {
                var requiredQty = parseInt($(this).val()) || 0;
                var currentQty = parseInt($('#currentQuantity').val()) || 0;

                if (requiredQty > currentQty) {
                    $('#quantityError').show();
                    $(this).addClass('is-invalid');
                } else {
                    $('#quantityError').hide();
                    $(this).removeClass('is-invalid');
                }
            });

            // Add item button
            $('#addItemBtn').click(function () {
                var itemType = $('#itemType').val();
                var itemId = $('#itemId').val();
                var itemName = $('#itemId option:selected').text();
                var quantity = parseInt($('#itemQuantity').val()) || 0;
                var currentQuantity = parseInt($('#currentQuantity').val()) || 0;

                // Validation
                if (!itemType || !itemId) {
                    alert('يجب اختيار نوع الصنف والصنف أولاً');
                    return;
                }

                if (quantity <= 0) {
                    alert('يجب إدخال كمية صحيحة أكبر من الصفر');
                    return;
                }

                if (quantity > currentQuantity) {
                    alert('الكمية المطلوبة أكبر من الكمية المتاحة');
                    return;
                }

                // Check if item already exists
                var existingItemIndex = items.findIndex(item => item.itemId == itemId);
                if (existingItemIndex >= 0 && editIndex === -1) {
                    alert('هذا الصنف مضاف بالفعل');
                    return;
                }

                // Create new item
                var newItem = {
                    itemType: itemType,
                    itemId: itemId,
                    itemName: itemName,
                    quantity: quantity,
                    currentQuantity: currentQuantity
                };

                // Add or update item
                if (editIndex === -1) {
                    items.push(newItem);
                } else {
                    items[editIndex] = newItem;
                    editIndex = -1;
                    $('#addItemBtn').text('إضافة');
                }

                // Update UI
                renderItemsTable();
                resetItemForm();
            });

            // Render items table
            function renderItemsTable() {
                var $tableBody = $('#itemsTableBody');
                var $hiddenContainer = $('#hiddenItemsContainer');

                $tableBody.empty();
                $hiddenContainer.empty();

                if (items.length === 0) {
                    $tableBody.append('<tr><td colspan="5" class="text-center">لا توجد أصناف مضافة</td></tr>');
                    return;
                }

                items.forEach((item, index) => {
                    // Add row to table
                    $tableBody.append(`
                        <tr data-index="${index}">
                            <td>${getArabicType(item.itemType)}</td>
                            <td>${item.itemName}</td>
                            <td>${item.currentQuantity}</td>
                            <td>${item.quantity}</td>
                            <td>
                                <button type="button" class="btn btn-warning btn-sm editItem">
                                    <i class="bx bx-edit"></i> تعديل
                                </button>
                                <button type="button" class="btn btn-danger btn-sm deleteItem">
                                    <i class="bx bx-trash"></i> حذف
                                </button>
                            </td>
                        </tr>
                    `);

                    // Add hidden fields for form submission
                    addHiddenFields(item, index);
                });
            }

            // Reset item form
            function resetItemForm() {
                $('#itemType').val('').trigger('change');
                $('#itemId').empty().append('<option value="">-- اختر الصنف --</option>').prop('disabled', true);
                $('#currentQuantity').val('');
                $('#itemQuantity').val('');
                $('#quantityError').hide();
            }

            // Edit item
            $('#itemsTableBody').on('click', '.editItem', function() {
                editIndex = $(this).closest('tr').data('index');
                var item = items[editIndex];

                $('#itemType').val(item.itemType).trigger('change');

                // Small delay to ensure the itemId select is populated
                setTimeout(() => {
                    $('#itemId').val(item.itemId);
                    $('#currentQuantity').val(item.currentQuantity);
                    $('#itemQuantity').val(item.quantity);
                    $('#addItemBtn').text('تحديث');
                }, 100);
            });

            // Delete item
            $('#itemsTableBody').on('click', '.deleteItem', function() {
                if (confirm('هل أنت متأكد من حذف هذا الصنف؟')) {
                    items.splice($(this).closest('tr').data('index'), 1);
                    renderItemsTable();
                }
            });

            // Helper function to get Arabic type
            function getArabicType(type) {
                switch(type) {
                    case 'Paper': return 'ورق';
                    case 'Ink': return 'حبر';
                    case 'Supply': return 'مستلزمات';
                    default: return type;
                }
            }

                    function addHiddenFields(item, index) {
            var $hiddenContainer = $('#hiddenItemsContainer');
            var prefix = `BridgeList[${index}]`;

            var hiddenFields = `
                <input type="hidden" name="${prefix}.Type" value="${item.itemType}" />
                <input type="hidden" name="${prefix}.Quantity" value="${item.quantity}" />
            `;

            // إضافة الحقل الصحيح بناءً على نوع العنصر
            if (item.itemType === 'Paper') {
                hiddenFields += `<input type="hidden" name="${prefix}.PaperId" value="${item.itemId}" />`;
            }
            else if (item.itemType === 'Ink') {
                hiddenFields += `<input type="hidden" name="${prefix}.InkId" value="${item.itemId}" />`;
            }
            else if (item.itemType === 'Supply') {
                hiddenFields += `<input type="hidden" name="${prefix}.SuppliesId" value="${item.itemId}" />`;
            }

            $hiddenContainer.append(hiddenFields);
        }

            // Form submission
            $('#requisiteForm').submit(function(e) {
                // You can remove this validation if you want to allow submission without items
                if (items.length === 0) {
                    if (!confirm('لم تقم بإضافة أي أصناف. هل تريد المتابعة؟')) {
                        e.preventDefault();
                    }
                }
            });
        });
    </script>
}